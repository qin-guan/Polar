// <auto-generated/>
#pragma warning disable CS0618
using ApiSdk.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ApiSdk.V1.Files.Item.Uploaded
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\files\{id}\uploaded
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UploadedRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UploadedRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/files/{id}/uploaded", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UploadedRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/files/{id}/uploaded", rawUrl)
        {
        }
        /// <summary>
        /// Complete a file upload.**Scopes**: `files:write`
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::ApiSdk.Models.NotPermitted">When receiving a 403 status code</exception>
        /// <exception cref="global::ApiSdk.Models.ResourceNotFound">When receiving a 404 status code</exception>
        /// <exception cref="global::ApiSdk.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse?> PostAsUploadedPostResponseAsync(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse> PostAsUploadedPostResponseAsync(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "403", global::ApiSdk.Models.NotPermitted.CreateFromDiscriminatorValue },
                { "404", global::ApiSdk.Models.ResourceNotFound.CreateFromDiscriminatorValue },
                { "422", global::ApiSdk.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse>(requestInfo, global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Complete a file upload.**Scopes**: `files:write`
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::ApiSdk.Models.NotPermitted">When receiving a 403 status code</exception>
        /// <exception cref="global::ApiSdk.Models.ResourceNotFound">When receiving a 404 status code</exception>
        /// <exception cref="global::ApiSdk.Models.HTTPValidationError">When receiving a 422 status code</exception>
        [Obsolete("This method is obsolete. Use PostAsUploadedPostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse?> PostAsync(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse> PostAsync(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "403", global::ApiSdk.Models.NotPermitted.CreateFromDiscriminatorValue },
                { "404", global::ApiSdk.Models.ResourceNotFound.CreateFromDiscriminatorValue },
                { "422", global::ApiSdk.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse>(requestInfo, global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Complete a file upload.**Scopes**: `files:write`
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::ApiSdk.Models.FileUploadCompleted body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder WithUrl(string rawUrl)
        {
            return new global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.DownloadableFileRead"/>, <see cref="global::ApiSdk.Models.OrganizationAvatarFileRead"/>, <see cref="global::ApiSdk.Models.ProductMediaFileRead"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UploadedPostResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.DownloadableFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.DownloadableFileRead? DownloadableFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.DownloadableFileRead DownloadableFileRead { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrganizationAvatarFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrganizationAvatarFileRead? OrganizationAvatarFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrganizationAvatarFileRead OrganizationAvatarFileRead { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.ProductMediaFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.ProductMediaFileRead? ProductMediaFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.ProductMediaFileRead ProductMediaFileRead { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("service")?.GetStringValue();
                var result = new global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedPostResponse();
                if("downloadable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.DownloadableFileRead = new global::ApiSdk.Models.DownloadableFileRead();
                }
                else if("organization_avatar".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.OrganizationAvatarFileRead = new global::ApiSdk.Models.OrganizationAvatarFileRead();
                }
                else if("product_media".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProductMediaFileRead = new global::ApiSdk.Models.ProductMediaFileRead();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DownloadableFileRead != null)
                {
                    return DownloadableFileRead.GetFieldDeserializers();
                }
                else if(OrganizationAvatarFileRead != null)
                {
                    return OrganizationAvatarFileRead.GetFieldDeserializers();
                }
                else if(ProductMediaFileRead != null)
                {
                    return ProductMediaFileRead.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DownloadableFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.DownloadableFileRead>(null, DownloadableFileRead);
                }
                else if(OrganizationAvatarFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrganizationAvatarFileRead>(null, OrganizationAvatarFileRead);
                }
                else if(ProductMediaFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.ProductMediaFileRead>(null, ProductMediaFileRead);
                }
            }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UploadedRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.DownloadableFileRead"/>, <see cref="global::ApiSdk.Models.OrganizationAvatarFileRead"/>, <see cref="global::ApiSdk.Models.ProductMediaFileRead"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UploadedResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.DownloadableFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.DownloadableFileRead? DownloadableFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.DownloadableFileRead DownloadableFileRead { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrganizationAvatarFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrganizationAvatarFileRead? OrganizationAvatarFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrganizationAvatarFileRead OrganizationAvatarFileRead { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.ProductMediaFileRead"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.ProductMediaFileRead? ProductMediaFileRead { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.ProductMediaFileRead ProductMediaFileRead { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("service")?.GetStringValue();
                var result = new global::ApiSdk.V1.Files.Item.Uploaded.UploadedRequestBuilder.UploadedResponse();
                if("downloadable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.DownloadableFileRead = new global::ApiSdk.Models.DownloadableFileRead();
                }
                else if("organization_avatar".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.OrganizationAvatarFileRead = new global::ApiSdk.Models.OrganizationAvatarFileRead();
                }
                else if("product_media".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProductMediaFileRead = new global::ApiSdk.Models.ProductMediaFileRead();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DownloadableFileRead != null)
                {
                    return DownloadableFileRead.GetFieldDeserializers();
                }
                else if(OrganizationAvatarFileRead != null)
                {
                    return OrganizationAvatarFileRead.GetFieldDeserializers();
                }
                else if(ProductMediaFileRead != null)
                {
                    return ProductMediaFileRead.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DownloadableFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.DownloadableFileRead>(null, DownloadableFileRead);
                }
                else if(OrganizationAvatarFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrganizationAvatarFileRead>(null, OrganizationAvatarFileRead);
                }
                else if(ProductMediaFileRead != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.ProductMediaFileRead>(null, ProductMediaFileRead);
                }
            }
        }
    }
}
#pragma warning restore CS0618
