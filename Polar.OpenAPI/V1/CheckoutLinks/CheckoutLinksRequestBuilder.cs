// <auto-generated/>
#pragma warning disable CS0618
using ApiSdk.Models;
using ApiSdk.V1.CheckoutLinks.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ApiSdk.V1.CheckoutLinks
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\checkout-links\
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CheckoutLinksRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the ApiSdk.v1.checkoutLinks.item collection</summary>
        /// <param name="position">The checkout link ID.</param>
        /// <returns>A <see cref="global::ApiSdk.V1.CheckoutLinks.Item.CheckoutLinksItemRequestBuilder"/></returns>
        public global::ApiSdk.V1.CheckoutLinks.Item.CheckoutLinksItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::ApiSdk.V1.CheckoutLinks.Item.CheckoutLinksItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CheckoutLinksRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/checkout-links/{?limit*,organization_id*,page*,product_id*,sorting*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CheckoutLinksRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/checkout-links/{?limit*,organization_id*,page*,product_id*,sorting*}", rawUrl)
        {
        }
        /// <summary>
        /// List checkout links.**Scopes**: `checkout_links:read` `checkout_links:write`
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.ListResource_CheckoutLink_"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::ApiSdk.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ApiSdk.Models.ListResource_CheckoutLink_?> GetAsync(Action<RequestConfiguration<global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ApiSdk.Models.ListResource_CheckoutLink_> GetAsync(Action<RequestConfiguration<global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::ApiSdk.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::ApiSdk.Models.ListResource_CheckoutLink_>(requestInfo, global::ApiSdk.Models.ListResource_CheckoutLink_.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Create a checkout link.**Scopes**: `checkout_links:write`
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CheckoutLink"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::ApiSdk.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ApiSdk.Models.CheckoutLink?> PostAsync(global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ApiSdk.Models.CheckoutLink> PostAsync(global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::ApiSdk.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::ApiSdk.Models.CheckoutLink>(requestInfo, global::ApiSdk.Models.CheckoutLink.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// List checkout links.**Scopes**: `checkout_links:read` `checkout_links:write`
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Create a checkout link.**Scopes**: `checkout_links:write`
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder WithUrl(string rawUrl)
        {
            return new global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.CheckoutLinkCreateProduct"/>, <see cref="global::ApiSdk.Models.CheckoutLinkCreateProductPrice"/>, <see cref="global::ApiSdk.Models.CheckoutLinkCreateProducts"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutLinksPostRequestBody : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CheckoutLinkCreateProduct"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CheckoutLinkCreateProduct? CheckoutLinkCreateProduct { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CheckoutLinkCreateProduct CheckoutLinkCreateProduct { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CheckoutLinkCreateProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CheckoutLinkCreateProductPrice? CheckoutLinkCreateProductPrice { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CheckoutLinkCreateProductPrice CheckoutLinkCreateProductPrice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CheckoutLinkCreateProducts"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CheckoutLinkCreateProducts? CheckoutLinkCreateProducts { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CheckoutLinkCreateProducts CheckoutLinkCreateProducts { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksPostRequestBody();
                result.CheckoutLinkCreateProduct = new global::ApiSdk.Models.CheckoutLinkCreateProduct();
                result.CheckoutLinkCreateProductPrice = new global::ApiSdk.Models.CheckoutLinkCreateProductPrice();
                result.CheckoutLinkCreateProducts = new global::ApiSdk.Models.CheckoutLinkCreateProducts();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutLinkCreateProduct != null || CheckoutLinkCreateProductPrice != null || CheckoutLinkCreateProducts != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutLinkCreateProduct, CheckoutLinkCreateProductPrice, CheckoutLinkCreateProducts);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::ApiSdk.Models.CheckoutLinkCreateProduct>(null, CheckoutLinkCreateProduct, CheckoutLinkCreateProductPrice, CheckoutLinkCreateProducts);
            }
        }
        /// <summary>
        /// List checkout links.**Scopes**: `checkout_links:read` `checkout_links:write`
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutLinksRequestBuilderGetQueryParameters 
        {
            /// <summary>Size of a page, defaults to 10. Maximum is 100.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Filter by organization ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("organization_id")]
            public string? OrganizationId { get; set; }
#nullable restore
#else
            [QueryParameter("organization_id")]
            public string OrganizationId { get; set; }
#endif
            /// <summary>Page number, defaults to 1.</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Filter by product ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("product_id")]
            public string? ProductId { get; set; }
#nullable restore
#else
            [QueryParameter("product_id")]
            public string ProductId { get; set; }
#endif
            /// <summary>Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sorting")]
            public string? Sorting { get; set; }
#nullable restore
#else
            [QueryParameter("sorting")]
            public string Sorting { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutLinksRequestBuilderGetRequestConfiguration : RequestConfiguration<global::ApiSdk.V1.CheckoutLinks.CheckoutLinksRequestBuilder.CheckoutLinksRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutLinksRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
