// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Polar.OpenAPI.V1.Benefits;
using Polar.OpenAPI.V1.CheckoutLinks;
using Polar.OpenAPI.V1.Checkouts;
using Polar.OpenAPI.V1.CustomFields;
using Polar.OpenAPI.V1.CustomerPortal;
using Polar.OpenAPI.V1.CustomerSessions;
using Polar.OpenAPI.V1.Customers;
using Polar.OpenAPI.V1.Discounts;
using Polar.OpenAPI.V1.Events;
using Polar.OpenAPI.V1.External_organizations;
using Polar.OpenAPI.V1.Files;
using Polar.OpenAPI.V1.LicenseKeys;
using Polar.OpenAPI.V1.Meters;
using Polar.OpenAPI.V1.Metrics;
using Polar.OpenAPI.V1.Oauth2;
using Polar.OpenAPI.V1.Orders;
using Polar.OpenAPI.V1.Organizations;
using Polar.OpenAPI.V1.Products;
using Polar.OpenAPI.V1.Refunds;
using Polar.OpenAPI.V1.Repositories;
using Polar.OpenAPI.V1.Subscriptions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Polar.OpenAPI.V1
{
    /// <summary>
    /// Builds and executes requests for operations under \v1
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1RequestBuilder : BaseRequestBuilder
    {
        /// <summary>The benefits property</summary>
        public global::Polar.OpenAPI.V1.Benefits.BenefitsRequestBuilder Benefits
        {
            get => new global::Polar.OpenAPI.V1.Benefits.BenefitsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The checkoutLinks property</summary>
        public global::Polar.OpenAPI.V1.CheckoutLinks.CheckoutLinksRequestBuilder CheckoutLinks
        {
            get => new global::Polar.OpenAPI.V1.CheckoutLinks.CheckoutLinksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The checkouts property</summary>
        public global::Polar.OpenAPI.V1.Checkouts.CheckoutsRequestBuilder Checkouts
        {
            get => new global::Polar.OpenAPI.V1.Checkouts.CheckoutsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customerPortal property</summary>
        public global::Polar.OpenAPI.V1.CustomerPortal.CustomerPortalRequestBuilder CustomerPortal
        {
            get => new global::Polar.OpenAPI.V1.CustomerPortal.CustomerPortalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customers property</summary>
        public global::Polar.OpenAPI.V1.Customers.CustomersRequestBuilder Customers
        {
            get => new global::Polar.OpenAPI.V1.Customers.CustomersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customerSessions property</summary>
        public global::Polar.OpenAPI.V1.CustomerSessions.CustomerSessionsRequestBuilder CustomerSessions
        {
            get => new global::Polar.OpenAPI.V1.CustomerSessions.CustomerSessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customFields property</summary>
        public global::Polar.OpenAPI.V1.CustomFields.CustomFieldsRequestBuilder CustomFields
        {
            get => new global::Polar.OpenAPI.V1.CustomFields.CustomFieldsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The discounts property</summary>
        public global::Polar.OpenAPI.V1.Discounts.DiscountsRequestBuilder Discounts
        {
            get => new global::Polar.OpenAPI.V1.Discounts.DiscountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The events property</summary>
        public global::Polar.OpenAPI.V1.Events.EventsRequestBuilder Events
        {
            get => new global::Polar.OpenAPI.V1.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The external_organizations property</summary>
        public global::Polar.OpenAPI.V1.External_organizations.External_organizationsRequestBuilder External_organizations
        {
            get => new global::Polar.OpenAPI.V1.External_organizations.External_organizationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The files property</summary>
        public global::Polar.OpenAPI.V1.Files.FilesRequestBuilder Files
        {
            get => new global::Polar.OpenAPI.V1.Files.FilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The licenseKeys property</summary>
        public global::Polar.OpenAPI.V1.LicenseKeys.LicenseKeysRequestBuilder LicenseKeys
        {
            get => new global::Polar.OpenAPI.V1.LicenseKeys.LicenseKeysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The meters property</summary>
        public global::Polar.OpenAPI.V1.Meters.MetersRequestBuilder Meters
        {
            get => new global::Polar.OpenAPI.V1.Meters.MetersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The metrics property</summary>
        public global::Polar.OpenAPI.V1.Metrics.MetricsRequestBuilder Metrics
        {
            get => new global::Polar.OpenAPI.V1.Metrics.MetricsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The oauth2 property</summary>
        public global::Polar.OpenAPI.V1.Oauth2.Oauth2RequestBuilder Oauth2
        {
            get => new global::Polar.OpenAPI.V1.Oauth2.Oauth2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The orders property</summary>
        public global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder Orders
        {
            get => new global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The organizations property</summary>
        public global::Polar.OpenAPI.V1.Organizations.OrganizationsRequestBuilder Organizations
        {
            get => new global::Polar.OpenAPI.V1.Organizations.OrganizationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::Polar.OpenAPI.V1.Products.ProductsRequestBuilder Products
        {
            get => new global::Polar.OpenAPI.V1.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refunds property</summary>
        public global::Polar.OpenAPI.V1.Refunds.RefundsRequestBuilder Refunds
        {
            get => new global::Polar.OpenAPI.V1.Refunds.RefundsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The repositories property</summary>
        public global::Polar.OpenAPI.V1.Repositories.RepositoriesRequestBuilder Repositories
        {
            get => new global::Polar.OpenAPI.V1.Repositories.RepositoriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscriptions property</summary>
        public global::Polar.OpenAPI.V1.Subscriptions.SubscriptionsRequestBuilder Subscriptions
        {
            get => new global::Polar.OpenAPI.V1.Subscriptions.SubscriptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.V1.V1RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V1RequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.V1.V1RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V1RequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
