// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Polar.OpenAPI.Models;
using Polar.OpenAPI.V1.Orders.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Polar.OpenAPI.V1.Orders
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\orders\
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OrdersRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Polar.OpenAPI.v1.orders.item collection</summary>
        /// <param name="position">The order ID.</param>
        /// <returns>A <see cref="global::Polar.OpenAPI.V1.Orders.Item.OrdersItemRequestBuilder"/></returns>
        public global::Polar.OpenAPI.V1.Orders.Item.OrdersItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::Polar.OpenAPI.V1.Orders.Item.OrdersItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OrdersRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/orders/{?checkout_id*,customer_id*,discount_id*,limit*,organization_id*,page*,product_billing_type*,product_id*,product_price_type*,sorting*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OrdersRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/orders/{?checkout_id*,customer_id*,discount_id*,limit*,organization_id*,page*,product_billing_type*,product_id*,product_price_type*,sorting*}", rawUrl)
        {
        }
        /// <summary>
        /// List orders.**Scopes**: `orders:read`
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.ListResource_Order_"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Polar.OpenAPI.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Polar.OpenAPI.Models.ListResource_Order_?> GetAsync(Action<RequestConfiguration<global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder.OrdersRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Polar.OpenAPI.Models.ListResource_Order_> GetAsync(Action<RequestConfiguration<global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder.OrdersRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::Polar.OpenAPI.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Polar.OpenAPI.Models.ListResource_Order_>(requestInfo, global::Polar.OpenAPI.Models.ListResource_Order_.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// List orders.**Scopes**: `orders:read`
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder.OrdersRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder.OrdersRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// List orders.**Scopes**: `orders:read`
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrdersRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter by checkout ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("checkout_id")]
            public string? CheckoutId { get; set; }
#nullable restore
#else
            [QueryParameter("checkout_id")]
            public string CheckoutId { get; set; }
#endif
            /// <summary>Filter by customer ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer_id")]
            public string? CustomerId { get; set; }
#nullable restore
#else
            [QueryParameter("customer_id")]
            public string CustomerId { get; set; }
#endif
            /// <summary>Filter by discount ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("discount_id")]
            public string? DiscountId { get; set; }
#nullable restore
#else
            [QueryParameter("discount_id")]
            public string DiscountId { get; set; }
#endif
            /// <summary>Size of a page, defaults to 10. Maximum is 100.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Filter by organization ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("organization_id")]
            public string? OrganizationId { get; set; }
#nullable restore
#else
            [QueryParameter("organization_id")]
            public string OrganizationId { get; set; }
#endif
            /// <summary>Page number, defaults to 1.</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Filter by product billing type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("product_billing_type")]
            public string? ProductBillingType { get; set; }
#nullable restore
#else
            [QueryParameter("product_billing_type")]
            public string ProductBillingType { get; set; }
#endif
            /// <summary>Filter by product ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("product_id")]
            public string? ProductId { get; set; }
#nullable restore
#else
            [QueryParameter("product_id")]
            public string ProductId { get; set; }
#endif
            [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("product_price_type")]
            public string? ProductPriceType { get; set; }
#nullable restore
#else
            [QueryParameter("product_price_type")]
            public string ProductPriceType { get; set; }
#endif
            /// <summary>Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sorting")]
            public string? Sorting { get; set; }
#nullable restore
#else
            [QueryParameter("sorting")]
            public string Sorting { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrdersRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Polar.OpenAPI.V1.Orders.OrdersRequestBuilder.OrdersRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
