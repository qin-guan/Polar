// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Update an existing checkout session using an access token.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CheckoutUpdate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it&apos;ll still be applied, but the customer won&apos;t be able to change it.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes? AllowDiscountCodes { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes AllowDiscountCodes { get; set; }
#endif
        /// <summary>The amount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount? Amount { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount Amount { get; set; }
#endif
        /// <summary>The customer_billing_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Address? CustomerBillingAddress { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Address CustomerBillingAddress { get; set; }
#endif
        /// <summary>The customer_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email? CustomerEmail { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email CustomerEmail { get; set; }
#endif
        /// <summary>The customer_ip_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address? CustomerIpAddress { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address CustomerIpAddress { get; set; }
#endif
        /// <summary>Key-value object allowing you to store additional information that&apos;ll be copied to the created customer.The key must be a string with a maximum length of **40 characters**.The value must be either:* A string with a maximum length of **500 characters*** An integer* A booleanYou can store up to **50 key-value pairs**.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? CustomerMetadata { get; set; }
#nullable restore
#else
        public UntypedNode CustomerMetadata { get; set; }
#endif
        /// <summary>The customer_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name? CustomerName { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name CustomerName { get; set; }
#endif
        /// <summary>The customer_tax_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id? CustomerTaxId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id CustomerTaxId { get; set; }
#endif
        /// <summary>Key-value object storing custom field values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate_custom_field_data? CustomFieldData { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate_custom_field_data CustomFieldData { get; set; }
#endif
        /// <summary>ID of the discount to apply to the checkout.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id? DiscountId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id DiscountId { get; set; }
#endif
        /// <summary>If you plan to embed the checkout session, set this to the Origin of the embedding page. It&apos;ll allow the Polar iframe to communicate with the parent page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin? EmbedOrigin { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin EmbedOrigin { get; set; }
#endif
        /// <summary>Key-value object allowing you to store additional information.The key must be a string with a maximum length of **40 characters**.The value must be either:* A string with a maximum length of **500 characters*** An integer* A booleanYou can store up to **50 key-value pairs**.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate_metadata Metadata { get; set; }
#endif
        /// <summary>ID of the product to checkout. Must be present in the checkout&apos;s product list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id? ProductId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id ProductId { get; set; }
#endif
        /// <summary>ID of the product price to checkout. Must correspond to a price present in the checkout&apos;s product list.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id? ProductPriceId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id ProductPriceId { get; set; }
#endif
        /// <summary>URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url? SuccessUrl { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url SuccessUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate"/> and sets the default values.
        /// </summary>
        public CheckoutUpdate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CheckoutUpdate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.CheckoutUpdate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allow_discount_codes", n => { AllowDiscountCodes = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes.CreateFromDiscriminatorValue); } },
                { "amount", n => { Amount = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount.CreateFromDiscriminatorValue); } },
                { "custom_field_data", n => { CustomFieldData = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_custom_field_data>(global::Polar.OpenAPI.Models.CheckoutUpdate_custom_field_data.CreateFromDiscriminatorValue); } },
                { "customer_billing_address", n => { CustomerBillingAddress = n.GetObjectValue<global::Polar.OpenAPI.Models.Address>(global::Polar.OpenAPI.Models.Address.CreateFromDiscriminatorValue); } },
                { "customer_email", n => { CustomerEmail = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email.CreateFromDiscriminatorValue); } },
                { "customer_ip_address", n => { CustomerIpAddress = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address.CreateFromDiscriminatorValue); } },
                { "customer_metadata", n => { CustomerMetadata = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "customer_name", n => { CustomerName = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name.CreateFromDiscriminatorValue); } },
                { "customer_tax_id", n => { CustomerTaxId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id.CreateFromDiscriminatorValue); } },
                { "discount_id", n => { DiscountId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id.CreateFromDiscriminatorValue); } },
                { "embed_origin", n => { EmbedOrigin = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_metadata>(global::Polar.OpenAPI.Models.CheckoutUpdate_metadata.CreateFromDiscriminatorValue); } },
                { "product_id", n => { ProductId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id.CreateFromDiscriminatorValue); } },
                { "product_price_id", n => { ProductPriceId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id.CreateFromDiscriminatorValue); } },
                { "success_url", n => { SuccessUrl = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url>(global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes>("allow_discount_codes", AllowDiscountCodes);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount>("amount", Amount);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Address>("customer_billing_address", CustomerBillingAddress);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email>("customer_email", CustomerEmail);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address>("customer_ip_address", CustomerIpAddress);
            writer.WriteObjectValue<UntypedNode>("customer_metadata", CustomerMetadata);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name>("customer_name", CustomerName);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id>("customer_tax_id", CustomerTaxId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_custom_field_data>("custom_field_data", CustomFieldData);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id>("discount_id", DiscountId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin>("embed_origin", EmbedOrigin);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id>("product_id", ProductId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id>("product_price_id", ProductPriceId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url>("success_url", SuccessUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_allow_discount_codes : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1? CheckoutUpdateAllowDiscountCodesMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1 CheckoutUpdateAllowDiscountCodesMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_allow_discount_codes();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else {
                    result.CheckoutUpdateAllowDiscountCodesMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateAllowDiscountCodesMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateAllowDiscountCodesMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_allow_discount_codesMember1>(null, CheckoutUpdateAllowDiscountCodesMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1"/>, <see cref="int"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_amount : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1? CheckoutUpdateAmountMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1 CheckoutUpdateAmountMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_amount();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else {
                    result.CheckoutUpdateAmountMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateAmountMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateAmountMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_amountMember1>(null, CheckoutUpdateAmountMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_customer_email : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1? CheckoutUpdateCustomerEmailMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1 CheckoutUpdateCustomerEmailMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_email();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateCustomerEmailMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateCustomerEmailMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateCustomerEmailMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_customer_emailMember1>(null, CheckoutUpdateCustomerEmailMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_customer_ip_address : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1? CheckoutUpdateCustomerIpAddressMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1 CheckoutUpdateCustomerIpAddressMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_ip_address();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateCustomerIpAddressMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateCustomerIpAddressMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateCustomerIpAddressMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_customer_ip_addressMember1>(null, CheckoutUpdateCustomerIpAddressMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_customer_name : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1? CheckoutUpdateCustomerNameMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1 CheckoutUpdateCustomerNameMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_name();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateCustomerNameMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateCustomerNameMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateCustomerNameMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_customer_nameMember1>(null, CheckoutUpdateCustomerNameMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_customer_tax_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1? CheckoutUpdateCustomerTaxIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1 CheckoutUpdateCustomerTaxIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_customer_tax_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateCustomerTaxIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateCustomerTaxIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateCustomerTaxIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_customer_tax_idMember1>(null, CheckoutUpdateCustomerTaxIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_discount_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1? CheckoutUpdateDiscountIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1 CheckoutUpdateDiscountIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_discount_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateDiscountIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateDiscountIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateDiscountIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_discount_idMember1>(null, CheckoutUpdateDiscountIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_embed_origin : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1? CheckoutUpdateEmbedOriginMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1 CheckoutUpdateEmbedOriginMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_embed_origin();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateEmbedOriginMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateEmbedOriginMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateEmbedOriginMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_embed_originMember1>(null, CheckoutUpdateEmbedOriginMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_product_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1? CheckoutUpdateProductIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1 CheckoutUpdateProductIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateProductIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateProductIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateProductIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_product_idMember1>(null, CheckoutUpdateProductIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_product_price_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1? CheckoutUpdateProductPriceIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1 CheckoutUpdateProductPriceIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_product_price_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateProductPriceIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateProductPriceIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateProductPriceIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_product_price_idMember1>(null, CheckoutUpdateProductPriceIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdate_success_url : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1? CheckoutUpdateSuccessUrlMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1 CheckoutUpdateSuccessUrlMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdate.CheckoutUpdate_success_url();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdateSuccessUrlMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdateSuccessUrlMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdateSuccessUrlMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdate_success_urlMember1>(null, CheckoutUpdateSuccessUrlMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
