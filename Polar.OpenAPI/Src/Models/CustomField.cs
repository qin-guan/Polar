// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CustomFieldCheckbox"/>, <see cref="global::Polar.OpenAPI.Models.CustomFieldDate"/>, <see cref="global::Polar.OpenAPI.Models.CustomFieldNumber"/>, <see cref="global::Polar.OpenAPI.Models.CustomFieldSelect"/>, <see cref="global::Polar.OpenAPI.Models.CustomFieldText"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CustomField : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomFieldCheckbox"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomFieldCheckbox? CustomFieldCheckbox { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomFieldCheckbox CustomFieldCheckbox { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomFieldDate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomFieldDate? CustomFieldDate { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomFieldDate CustomFieldDate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomFieldNumber"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomFieldNumber? CustomFieldNumber { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomFieldNumber CustomFieldNumber { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomFieldSelect"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomFieldSelect? CustomFieldSelect { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomFieldSelect CustomFieldSelect { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomFieldText"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomFieldText? CustomFieldText { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomFieldText CustomFieldText { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomField"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CustomField CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::Polar.OpenAPI.Models.CustomField();
            if("checkbox".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CustomFieldCheckbox = new global::Polar.OpenAPI.Models.CustomFieldCheckbox();
            }
            else if("date".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CustomFieldDate = new global::Polar.OpenAPI.Models.CustomFieldDate();
            }
            else if("number".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CustomFieldNumber = new global::Polar.OpenAPI.Models.CustomFieldNumber();
            }
            else if("select".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CustomFieldSelect = new global::Polar.OpenAPI.Models.CustomFieldSelect();
            }
            else if("text".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.CustomFieldText = new global::Polar.OpenAPI.Models.CustomFieldText();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(CustomFieldCheckbox != null)
            {
                return CustomFieldCheckbox.GetFieldDeserializers();
            }
            else if(CustomFieldDate != null)
            {
                return CustomFieldDate.GetFieldDeserializers();
            }
            else if(CustomFieldNumber != null)
            {
                return CustomFieldNumber.GetFieldDeserializers();
            }
            else if(CustomFieldSelect != null)
            {
                return CustomFieldSelect.GetFieldDeserializers();
            }
            else if(CustomFieldText != null)
            {
                return CustomFieldText.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(CustomFieldCheckbox != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomFieldCheckbox>(null, CustomFieldCheckbox);
            }
            else if(CustomFieldDate != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomFieldDate>(null, CustomFieldDate);
            }
            else if(CustomFieldNumber != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomFieldNumber>(null, CustomFieldNumber);
            }
            else if(CustomFieldSelect != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomFieldSelect>(null, CustomFieldSelect);
            }
            else if(CustomFieldText != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomFieldText>(null, CustomFieldText);
            }
        }
    }
}
#pragma warning restore CS0618
