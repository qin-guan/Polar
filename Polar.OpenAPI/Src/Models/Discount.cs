// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration"/>, <see cref="global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration"/>, <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration"/>, <see cref="global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Discount : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration? DiscountFixedOnceForeverDuration { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration DiscountFixedOnceForeverDuration { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration? DiscountFixedRepeatDuration { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration DiscountFixedRepeatDuration { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration? DiscountPercentageOnceForeverDuration { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration DiscountPercentageOnceForeverDuration { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration? DiscountPercentageRepeatDuration { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration DiscountPercentageRepeatDuration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.Discount"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.Discount CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
            var result = new global::Polar.OpenAPI.Models.Discount();
            if("DiscountFixedOnceForeverDuration".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DiscountFixedOnceForeverDuration = new global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration();
            }
            else if("DiscountFixedRepeatDuration".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DiscountFixedRepeatDuration = new global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration();
            }
            else if("DiscountPercentageOnceForeverDuration".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DiscountPercentageOnceForeverDuration = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration();
            }
            else if("DiscountPercentageRepeatDuration".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.DiscountPercentageRepeatDuration = new global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(DiscountFixedOnceForeverDuration != null)
            {
                return DiscountFixedOnceForeverDuration.GetFieldDeserializers();
            }
            else if(DiscountFixedRepeatDuration != null)
            {
                return DiscountFixedRepeatDuration.GetFieldDeserializers();
            }
            else if(DiscountPercentageOnceForeverDuration != null)
            {
                return DiscountPercentageOnceForeverDuration.GetFieldDeserializers();
            }
            else if(DiscountPercentageRepeatDuration != null)
            {
                return DiscountPercentageRepeatDuration.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(DiscountFixedOnceForeverDuration != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountFixedOnceForeverDuration>(null, DiscountFixedOnceForeverDuration);
            }
            else if(DiscountFixedRepeatDuration != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountFixedRepeatDuration>(null, DiscountFixedRepeatDuration);
            }
            else if(DiscountPercentageOnceForeverDuration != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration>(null, DiscountPercentageOnceForeverDuration);
            }
            else if(DiscountPercentageRepeatDuration != null)
            {
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageRepeatDuration>(null, DiscountPercentageRepeatDuration);
            }
        }
    }
}
#pragma warning restore CS0618
