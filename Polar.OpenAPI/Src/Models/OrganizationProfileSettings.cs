// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OrganizationProfileSettings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Accent color for the organization</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color? AccentColor { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color AccentColor { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A description of the organization</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description? Description { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description Description { get; set; }
#endif
        /// <summary>If this organization has a profile enabled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled? Enabled { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled Enabled { get; set; }
#endif
        /// <summary>A list of featured organizations</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations? FeaturedOrganizations { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations FeaturedOrganizations { get; set; }
#endif
        /// <summary>A list of featured projects</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects? FeaturedProjects { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects FeaturedProjects { get; set; }
#endif
        /// <summary>A list of links associated with the organization</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links? Links { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links Links { get; set; }
#endif
        /// <summary>Subscription promotion settings</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationSubscribePromoteSettings? Subscribe { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationSubscribePromoteSettings Subscribe { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings"/> and sets the default values.
        /// </summary>
        public OrganizationProfileSettings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.OrganizationProfileSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.OrganizationProfileSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accent_color", n => { AccentColor = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description.CreateFromDiscriminatorValue); } },
                { "enabled", n => { Enabled = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled.CreateFromDiscriminatorValue); } },
                { "featured_organizations", n => { FeaturedOrganizations = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations.CreateFromDiscriminatorValue); } },
                { "featured_projects", n => { FeaturedProjects = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects.CreateFromDiscriminatorValue); } },
                { "links", n => { Links = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links.CreateFromDiscriminatorValue); } },
                { "subscribe", n => { Subscribe = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationSubscribePromoteSettings>(global::Polar.OpenAPI.Models.OrganizationSubscribePromoteSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color>("accent_color", AccentColor);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description>("description", Description);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled>("enabled", Enabled);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations>("featured_organizations", FeaturedOrganizations);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects>("featured_projects", FeaturedProjects);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links>("links", Links);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationSubscribePromoteSettings>("subscribe", Subscribe);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_accent_color : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1? OrganizationProfileSettingsAccentColorMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1 OrganizationProfileSettingsAccentColorMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_accent_color();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationProfileSettingsAccentColorMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsAccentColorMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsAccentColorMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_accent_colorMember1>(null, OrganizationProfileSettingsAccentColorMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1? OrganizationProfileSettingsDescriptionMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1 OrganizationProfileSettingsDescriptionMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationProfileSettingsDescriptionMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsDescriptionMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsDescriptionMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_descriptionMember1>(null, OrganizationProfileSettingsDescriptionMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_enabled : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1? OrganizationProfileSettingsEnabledMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1 OrganizationProfileSettingsEnabledMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_enabled();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else {
                    result.OrganizationProfileSettingsEnabledMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsEnabledMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsEnabledMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_enabledMember1>(null, OrganizationProfileSettingsEnabledMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_featured_organizations : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1? OrganizationProfileSettingsFeaturedOrganizationsMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1 OrganizationProfileSettingsFeaturedOrganizationsMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_organizations();
                if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationProfileSettingsFeaturedOrganizationsMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsFeaturedOrganizationsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsFeaturedOrganizationsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_organizationsMember1>(null, OrganizationProfileSettingsFeaturedOrganizationsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_featured_projects : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1? OrganizationProfileSettingsFeaturedProjectsMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1 OrganizationProfileSettingsFeaturedProjectsMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_featured_projects();
                if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationProfileSettingsFeaturedProjectsMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsFeaturedProjectsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsFeaturedProjectsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_featured_projectsMember1>(null, OrganizationProfileSettingsFeaturedProjectsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrganizationProfileSettings_links : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1? OrganizationProfileSettingsLinksMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1 OrganizationProfileSettingsLinksMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.OrganizationProfileSettings.OrganizationProfileSettings_links();
                if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationProfileSettingsLinksMember1 = new global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationProfileSettingsLinksMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationProfileSettingsLinksMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings_linksMember1>(null, OrganizationProfileSettingsLinksMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
