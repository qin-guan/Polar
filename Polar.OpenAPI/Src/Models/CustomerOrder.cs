// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomerOrder : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Amount in cents, after discounts but before taxes.</summary>
        [Obsolete("")]
        public int? Amount { get; set; }
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The customer_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>Discount amount in cents.</summary>
        public int? DiscountAmount { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Line items composing the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.OrderItemSchema>? Items { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.OrderItemSchema> Items { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>Amount in cents, after discounts but before taxes.</summary>
        public int? NetAmount { get; set; }
        /// <summary>Whether the order has been paid for.</summary>
        public bool? Paid { get; set; }
        /// <summary>The product property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerOrderProduct? Product { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerOrderProduct Product { get; set; }
#endif
        /// <summary>The product_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductId { get; set; }
#nullable restore
#else
        public string ProductId { get; set; }
#endif
        /// <summary>The product_price property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price? ProductPrice { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price ProductPrice { get; set; }
#endif
        /// <summary>The product_price_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductPriceId { get; set; }
#nullable restore
#else
        public string ProductPriceId { get; set; }
#endif
        /// <summary>Amount refunded in cents.</summary>
        public int? RefundedAmount { get; set; }
        /// <summary>Sales tax refunded in cents.</summary>
        public int? RefundedTaxAmount { get; set; }
        /// <summary>The status property</summary>
        public global::Polar.OpenAPI.Models.OrderStatus? Status { get; set; }
        /// <summary>The subscription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerOrderSubscription? Subscription { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerOrderSubscription Subscription { get; set; }
#endif
        /// <summary>The subscription_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id? SubscriptionId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id SubscriptionId { get; set; }
#endif
        /// <summary>Amount in cents, before discounts and taxes.</summary>
        public int? SubtotalAmount { get; set; }
        /// <summary>Sales tax amount in cents.</summary>
        public int? TaxAmount { get; set; }
        /// <summary>Amount in cents, after discounts and taxes.</summary>
        public int? TotalAmount { get; set; }
        /// <summary>The user_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.CustomerOrder"/> and sets the default values.
        /// </summary>
        public CustomerOrder()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerOrder"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CustomerOrder CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.CustomerOrder();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customer_id", n => { CustomerId = n.GetStringValue(); } },
                { "discount_amount", n => { DiscountAmount = n.GetIntValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.OrderItemSchema>(global::Polar.OpenAPI.Models.OrderItemSchema.CreateFromDiscriminatorValue)?.AsList(); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at>(global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at.CreateFromDiscriminatorValue); } },
                { "net_amount", n => { NetAmount = n.GetIntValue(); } },
                { "paid", n => { Paid = n.GetBoolValue(); } },
                { "product", n => { Product = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerOrderProduct>(global::Polar.OpenAPI.Models.CustomerOrderProduct.CreateFromDiscriminatorValue); } },
                { "product_id", n => { ProductId = n.GetStringValue(); } },
                { "product_price", n => { ProductPrice = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price>(global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price.CreateFromDiscriminatorValue); } },
                { "product_price_id", n => { ProductPriceId = n.GetStringValue(); } },
                { "refunded_amount", n => { RefundedAmount = n.GetIntValue(); } },
                { "refunded_tax_amount", n => { RefundedTaxAmount = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Polar.OpenAPI.Models.OrderStatus>(); } },
                { "subscription", n => { Subscription = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerOrderSubscription>(global::Polar.OpenAPI.Models.CustomerOrderSubscription.CreateFromDiscriminatorValue); } },
                { "subscription_id", n => { SubscriptionId = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id>(global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id.CreateFromDiscriminatorValue); } },
                { "subtotal_amount", n => { SubtotalAmount = n.GetIntValue(); } },
                { "tax_amount", n => { TaxAmount = n.GetIntValue(); } },
                { "total_amount", n => { TotalAmount = n.GetIntValue(); } },
                { "user_id", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customer_id", CustomerId);
            writer.WriteIntValue("discount_amount", DiscountAmount);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.OrderItemSchema>("items", Items);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at>("modified_at", ModifiedAt);
            writer.WriteIntValue("net_amount", NetAmount);
            writer.WriteBoolValue("paid", Paid);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrderProduct>("product", Product);
            writer.WriteStringValue("product_id", ProductId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price>("product_price", ProductPrice);
            writer.WriteStringValue("product_price_id", ProductPriceId);
            writer.WriteIntValue("refunded_amount", RefundedAmount);
            writer.WriteIntValue("refunded_tax_amount", RefundedTaxAmount);
            writer.WriteEnumValue<global::Polar.OpenAPI.Models.OrderStatus>("status", Status);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrderSubscription>("subscription", Subscription);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id>("subscription_id", SubscriptionId);
            writer.WriteIntValue("subtotal_amount", SubtotalAmount);
            writer.WriteIntValue("tax_amount", TaxAmount);
            writer.WriteIntValue("total_amount", TotalAmount);
            writer.WriteStringValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerOrder_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1? CustomerOrderModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1 CustomerOrderModifiedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerOrderModifiedAtMember1 = new global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerOrderModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerOrderModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrder_modified_atMember1>(null, CustomerOrderModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.LegacyRecurringProductPrice"/>, <see cref="global::Polar.OpenAPI.Models.ProductPrice"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerOrder_product_price : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.LegacyRecurringProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.LegacyRecurringProductPrice? LegacyRecurringProductPrice { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.LegacyRecurringProductPrice LegacyRecurringProductPrice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.ProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.ProductPrice? ProductPrice { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.ProductPrice ProductPrice { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("amount_type")?.GetStringValue();
                var result = new global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_product_price();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LegacyRecurringProductPrice = new global::Polar.OpenAPI.Models.LegacyRecurringProductPrice();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProductPrice = new global::Polar.OpenAPI.Models.ProductPrice();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(LegacyRecurringProductPrice != null)
                {
                    return LegacyRecurringProductPrice.GetFieldDeserializers();
                }
                else if(ProductPrice != null)
                {
                    return ProductPrice.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(LegacyRecurringProductPrice != null)
                {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.LegacyRecurringProductPrice>(null, LegacyRecurringProductPrice);
                }
                else if(ProductPrice != null)
                {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductPrice>(null, ProductPrice);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerOrder_subscription_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1? CustomerOrderSubscriptionIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1 CustomerOrderSubscriptionIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerOrder.CustomerOrder_subscription_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerOrderSubscriptionIdMember1 = new global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerOrderSubscriptionIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerOrderSubscriptionIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerOrder_subscription_idMember1>(null, CustomerOrderSubscriptionIdMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
