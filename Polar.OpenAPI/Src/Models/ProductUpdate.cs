// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Schema to update a product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProductUpdate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attached_custom_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.AttachedCustomFieldCreate>? AttachedCustomFields { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.AttachedCustomFieldCreate> AttachedCustomFields { get; set; }
#endif
        /// <summary>The description of the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description? Description { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description Description { get; set; }
#endif
        /// <summary>Whether the product is archived. If `true`, the product won&apos;t be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived? IsArchived { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived IsArchived { get; set; }
#endif
        /// <summary>List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias? Medias { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias Medias { get; set; }
#endif
        /// <summary>Key-value object allowing you to store additional information.The key must be a string with a maximum length of **40 characters**.The value must be either:* A string with a maximum length of **500 characters*** An integer* A booleanYou can store up to **50 key-value pairs**.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.ProductUpdate_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.ProductUpdate_metadata Metadata { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name? Name { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name Name { get; set; }
#endif
        /// <summary>List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.ProductPriceMeteredUnitCreate>? Prices { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.ProductPriceMeteredUnitCreate> Prices { get; set; }
#endif
        /// <summary>The recurring interval of the product. If `None`, the product is a one-time purchase. **Can only be set on legacy recurring products. Once set, it can&apos;t be changed.**</summary>
        public global::Polar.OpenAPI.Models.SubscriptionRecurringInterval? RecurringInterval { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.ProductUpdate"/> and sets the default values.
        /// </summary>
        public ProductUpdate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.ProductUpdate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.ProductUpdate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.ProductUpdate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attached_custom_fields", n => { AttachedCustomFields = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.AttachedCustomFieldCreate>(global::Polar.OpenAPI.Models.AttachedCustomFieldCreate.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description>(global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description.CreateFromDiscriminatorValue); } },
                { "is_archived", n => { IsArchived = n.GetObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived>(global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived.CreateFromDiscriminatorValue); } },
                { "medias", n => { Medias = n.GetObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias>(global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_metadata>(global::Polar.OpenAPI.Models.ProductUpdate_metadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name>(global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name.CreateFromDiscriminatorValue); } },
                { "prices", n => { Prices = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.ProductPriceMeteredUnitCreate>(global::Polar.OpenAPI.Models.ProductPriceMeteredUnitCreate.CreateFromDiscriminatorValue)?.AsList(); } },
                { "recurring_interval", n => { RecurringInterval = n.GetEnumValue<global::Polar.OpenAPI.Models.SubscriptionRecurringInterval>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.AttachedCustomFieldCreate>("attached_custom_fields", AttachedCustomFields);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description>("description", Description);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived>("is_archived", IsArchived);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias>("medias", Medias);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name>("name", Name);
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.ProductPriceMeteredUnitCreate>("prices", Prices);
            writer.WriteEnumValue<global::Polar.OpenAPI.Models.SubscriptionRecurringInterval>("recurring_interval", RecurringInterval);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductUpdate_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1? ProductUpdateDescriptionMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1 ProductUpdateDescriptionMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ProductUpdateDescriptionMember1 = new global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ProductUpdateDescriptionMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ProductUpdateDescriptionMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_descriptionMember1>(null, ProductUpdateDescriptionMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductUpdate_is_archived : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1? ProductUpdateIsArchivedMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1 ProductUpdateIsArchivedMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_is_archived();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else {
                    result.ProductUpdateIsArchivedMember1 = new global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ProductUpdateIsArchivedMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ProductUpdateIsArchivedMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_is_archivedMember1>(null, ProductUpdateIsArchivedMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductUpdate_medias : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1? ProductUpdateMediasMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1 ProductUpdateMediasMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_medias();
                if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ProductUpdateMediasMember1 = new global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ProductUpdateMediasMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ProductUpdateMediasMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_mediasMember1>(null, ProductUpdateMediasMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.ProductUpdate_nameMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProductUpdate_name : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.ProductUpdate_nameMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.ProductUpdate_nameMember1? ProductUpdateNameMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.ProductUpdate_nameMember1 ProductUpdateNameMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.ProductUpdate.ProductUpdate_name();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ProductUpdateNameMember1 = new global::Polar.OpenAPI.Models.ProductUpdate_nameMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ProductUpdateNameMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ProductUpdateNameMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.ProductUpdate_nameMember1>(null, ProductUpdateNameMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
