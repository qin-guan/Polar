// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Organization : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Avatar URL shown in checkout, customer portal, emails etc.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_avatar_url? AvatarUrl { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_avatar_url AvatarUrl { get; set; }
#endif
        /// <summary>The bio property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_bio? Bio { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_bio Bio { get; set; }
#endif
        /// <summary>The blog property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_blog? Blog { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_blog Blog { get; set; }
#endif
        /// <summary>The company property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_company? Company { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_company Company { get; set; }
#endif
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The default_upfront_split_to_contributors property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors? DefaultUpfrontSplitToContributors { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors DefaultUpfrontSplitToContributors { get; set; }
#endif
        /// <summary>When the business details were submitted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at? DetailsSubmittedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at DetailsSubmittedAt { get; set; }
#endif
        /// <summary>Public support email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_email? Email { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_email Email { get; set; }
#endif
        /// <summary>Organization feature settings</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationFeatureSettings? FeatureSettings { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationFeatureSettings FeatureSettings { get; set; }
#endif
        /// <summary>The organization ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The location property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_location? Location { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_location Location { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>Organization name shown in checkout, customer portal, emails etc.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The pledge_badge_show_amount property</summary>
        [Obsolete("")]
        public bool? PledgeBadgeShowAmount { get; set; }
        /// <summary>The pledge_minimum_amount property</summary>
        [Obsolete("")]
        public int? PledgeMinimumAmount { get; set; }
        /// <summary>Settings for the organization profile</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings? ProfileSettings { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationProfileSettings ProfileSettings { get; set; }
#endif
        /// <summary>Unique organization slug in checkout, customer portal and credit card statements.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>Links to social profiles.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.OrganizationSocialLink>? Socials { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.OrganizationSocialLink> Socials { get; set; }
#endif
        /// <summary>Settings related to subscriptions management</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.OrganizationSubscriptionSettings? SubscriptionSettings { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.OrganizationSubscriptionSettings SubscriptionSettings { get; set; }
#endif
        /// <summary>The twitter_username property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_twitter_username? TwitterUsername { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_twitter_username TwitterUsername { get; set; }
#endif
        /// <summary>Official website of the organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Organization.Organization_website? Website { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Organization.Organization_website Website { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.Organization"/> and sets the default values.
        /// </summary>
        public Organization()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.Organization CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.Organization();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "avatar_url", n => { AvatarUrl = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_avatar_url>(global::Polar.OpenAPI.Models.Organization.Organization_avatar_url.CreateFromDiscriminatorValue); } },
                { "bio", n => { Bio = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_bio>(global::Polar.OpenAPI.Models.Organization.Organization_bio.CreateFromDiscriminatorValue); } },
                { "blog", n => { Blog = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_blog>(global::Polar.OpenAPI.Models.Organization.Organization_blog.CreateFromDiscriminatorValue); } },
                { "company", n => { Company = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_company>(global::Polar.OpenAPI.Models.Organization.Organization_company.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "default_upfront_split_to_contributors", n => { DefaultUpfrontSplitToContributors = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors>(global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors.CreateFromDiscriminatorValue); } },
                { "details_submitted_at", n => { DetailsSubmittedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at>(global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_email>(global::Polar.OpenAPI.Models.Organization.Organization_email.CreateFromDiscriminatorValue); } },
                { "feature_settings", n => { FeatureSettings = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationFeatureSettings>(global::Polar.OpenAPI.Models.OrganizationFeatureSettings.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "location", n => { Location = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_location>(global::Polar.OpenAPI.Models.Organization.Organization_location.CreateFromDiscriminatorValue); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_modified_at>(global::Polar.OpenAPI.Models.Organization.Organization_modified_at.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "pledge_badge_show_amount", n => { PledgeBadgeShowAmount = n.GetBoolValue(); } },
                { "pledge_minimum_amount", n => { PledgeMinimumAmount = n.GetIntValue(); } },
                { "profile_settings", n => { ProfileSettings = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings>(global::Polar.OpenAPI.Models.OrganizationProfileSettings.CreateFromDiscriminatorValue); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "socials", n => { Socials = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.OrganizationSocialLink>(global::Polar.OpenAPI.Models.OrganizationSocialLink.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subscription_settings", n => { SubscriptionSettings = n.GetObjectValue<global::Polar.OpenAPI.Models.OrganizationSubscriptionSettings>(global::Polar.OpenAPI.Models.OrganizationSubscriptionSettings.CreateFromDiscriminatorValue); } },
                { "twitter_username", n => { TwitterUsername = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_twitter_username>(global::Polar.OpenAPI.Models.Organization.Organization_twitter_username.CreateFromDiscriminatorValue); } },
                { "website", n => { Website = n.GetObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_website>(global::Polar.OpenAPI.Models.Organization.Organization_website.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_avatar_url>("avatar_url", AvatarUrl);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_bio>("bio", Bio);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_blog>("blog", Blog);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_company>("company", Company);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors>("default_upfront_split_to_contributors", DefaultUpfrontSplitToContributors);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at>("details_submitted_at", DetailsSubmittedAt);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_email>("email", Email);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationFeatureSettings>("feature_settings", FeatureSettings);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_location>("location", Location);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_modified_at>("modified_at", ModifiedAt);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("pledge_badge_show_amount", PledgeBadgeShowAmount);
            writer.WriteIntValue("pledge_minimum_amount", PledgeMinimumAmount);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationProfileSettings>("profile_settings", ProfileSettings);
            writer.WriteStringValue("slug", Slug);
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.OrganizationSocialLink>("socials", Socials);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.OrganizationSubscriptionSettings>("subscription_settings", SubscriptionSettings);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_twitter_username>("twitter_username", TwitterUsername);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization.Organization_website>("website", Website);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_avatar_urlMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_avatar_url : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_avatar_urlMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_avatar_urlMember1? OrganizationAvatarUrlMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_avatar_urlMember1 OrganizationAvatarUrlMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_avatar_url"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_avatar_url CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_avatar_url();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationAvatarUrlMember1 = new global::Polar.OpenAPI.Models.Organization_avatar_urlMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationAvatarUrlMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationAvatarUrlMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_avatar_urlMember1>(null, OrganizationAvatarUrlMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_bioMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_bio : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_bioMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_bioMember1? OrganizationBioMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_bioMember1 OrganizationBioMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_bio"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_bio CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_bio();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationBioMember1 = new global::Polar.OpenAPI.Models.Organization_bioMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationBioMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationBioMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_bioMember1>(null, OrganizationBioMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_blogMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_blog : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_blogMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_blogMember1? OrganizationBlogMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_blogMember1 OrganizationBlogMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_blog"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_blog CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_blog();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationBlogMember1 = new global::Polar.OpenAPI.Models.Organization_blogMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationBlogMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationBlogMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_blogMember1>(null, OrganizationBlogMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_companyMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_company : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_companyMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_companyMember1? OrganizationCompanyMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_companyMember1 OrganizationCompanyMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_company"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_company CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_company();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationCompanyMember1 = new global::Polar.OpenAPI.Models.Organization_companyMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationCompanyMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationCompanyMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_companyMember1>(null, OrganizationCompanyMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1"/>, <see cref="int"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_default_upfront_split_to_contributors : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1? OrganizationDefaultUpfrontSplitToContributorsMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1 OrganizationDefaultUpfrontSplitToContributorsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_default_upfront_split_to_contributors();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else {
                    result.OrganizationDefaultUpfrontSplitToContributorsMember1 = new global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationDefaultUpfrontSplitToContributorsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationDefaultUpfrontSplitToContributorsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_default_upfront_split_to_contributorsMember1>(null, OrganizationDefaultUpfrontSplitToContributorsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_details_submitted_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1? OrganizationDetailsSubmittedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1 OrganizationDetailsSubmittedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_details_submitted_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrganizationDetailsSubmittedAtMember1 = new global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationDetailsSubmittedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationDetailsSubmittedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_details_submitted_atMember1>(null, OrganizationDetailsSubmittedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_emailMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_email : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_emailMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_emailMember1? OrganizationEmailMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_emailMember1 OrganizationEmailMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_email"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_email CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_email();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationEmailMember1 = new global::Polar.OpenAPI.Models.Organization_emailMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationEmailMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationEmailMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_emailMember1>(null, OrganizationEmailMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_locationMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_location : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_locationMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_locationMember1? OrganizationLocationMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_locationMember1 OrganizationLocationMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_location"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_location CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_location();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationLocationMember1 = new global::Polar.OpenAPI.Models.Organization_locationMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationLocationMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationLocationMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_locationMember1>(null, OrganizationLocationMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.Organization_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_modified_atMember1? OrganizationModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_modified_atMember1 OrganizationModifiedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrganizationModifiedAtMember1 = new global::Polar.OpenAPI.Models.Organization_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_modified_atMember1>(null, OrganizationModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_twitter_username : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1? OrganizationTwitterUsernameMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1 OrganizationTwitterUsernameMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_twitter_username"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_twitter_username CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_twitter_username();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationTwitterUsernameMember1 = new global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationTwitterUsernameMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationTwitterUsernameMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_twitter_usernameMember1>(null, OrganizationTwitterUsernameMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.Organization_websiteMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Organization_website : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.Organization_websiteMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.Organization_websiteMember1? OrganizationWebsiteMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.Organization_websiteMember1 OrganizationWebsiteMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.Organization.Organization_website"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.Organization.Organization_website CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.Organization.Organization_website();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrganizationWebsiteMember1 = new global::Polar.OpenAPI.Models.Organization_websiteMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrganizationWebsiteMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrganizationWebsiteMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.Organization_websiteMember1>(null, OrganizationWebsiteMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
