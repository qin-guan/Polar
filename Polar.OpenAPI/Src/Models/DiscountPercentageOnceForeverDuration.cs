// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Schema for a percentage discount that is applied once or forever.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DiscountPercentageOnceForeverDuration : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The basis_points property</summary>
        public int? BasisPoints { get; set; }
        /// <summary>Code customers can use to apply the discount during checkout.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code? Code { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code Code { get; set; }
#endif
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The duration property</summary>
        public global::Polar.OpenAPI.Models.DiscountDuration? Duration { get; set; }
        /// <summary>Timestamp after which the discount is no longer redeemable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at? EndsAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at EndsAt { get; set; }
#endif
        /// <summary>The ID of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Maximum number of times the discount can be redeemed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions? MaxRedemptions { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions MaxRedemptions { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_metadata Metadata { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>Name of the discount. Will be displayed to the customer when the discount is applied.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The organization ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationId { get; set; }
#nullable restore
#else
        public string OrganizationId { get; set; }
#endif
        /// <summary>The products property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.DiscountProduct>? Products { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.DiscountProduct> Products { get; set; }
#endif
        /// <summary>Number of times the discount has been redeemed.</summary>
        public int? RedemptionsCount { get; set; }
        /// <summary>Timestamp after which the discount is redeemable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at? StartsAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at StartsAt { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Polar.OpenAPI.Models.DiscountType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration"/> and sets the default values.
        /// </summary>
        public DiscountPercentageOnceForeverDuration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "basis_points", n => { BasisPoints = n.GetIntValue(); } },
                { "code", n => { Code = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "duration", n => { Duration = n.GetEnumValue<global::Polar.OpenAPI.Models.DiscountDuration>(); } },
                { "ends_at", n => { EndsAt = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "max_redemptions", n => { MaxRedemptions = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_metadata>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_metadata.CreateFromDiscriminatorValue); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "organization_id", n => { OrganizationId = n.GetStringValue(); } },
                { "products", n => { Products = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.DiscountProduct>(global::Polar.OpenAPI.Models.DiscountProduct.CreateFromDiscriminatorValue)?.AsList(); } },
                { "redemptions_count", n => { RedemptionsCount = n.GetIntValue(); } },
                { "starts_at", n => { StartsAt = n.GetObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at>(global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Polar.OpenAPI.Models.DiscountType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("basis_points", BasisPoints);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code>("code", Code);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteEnumValue<global::Polar.OpenAPI.Models.DiscountDuration>("duration", Duration);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at>("ends_at", EndsAt);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions>("max_redemptions", MaxRedemptions);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at>("modified_at", ModifiedAt);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("organization_id", OrganizationId);
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.DiscountProduct>("products", Products);
            writer.WriteIntValue("redemptions_count", RedemptionsCount);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at>("starts_at", StartsAt);
            writer.WriteEnumValue<global::Polar.OpenAPI.Models.DiscountType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DiscountPercentageOnceForeverDuration_code : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1? DiscountPercentageOnceForeverDurationCodeMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1 DiscountPercentageOnceForeverDurationCodeMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_code();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.DiscountPercentageOnceForeverDurationCodeMember1 = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DiscountPercentageOnceForeverDurationCodeMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DiscountPercentageOnceForeverDurationCodeMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_codeMember1>(null, DiscountPercentageOnceForeverDurationCodeMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DiscountPercentageOnceForeverDuration_ends_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1? DiscountPercentageOnceForeverDurationEndsAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1 DiscountPercentageOnceForeverDurationEndsAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_ends_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.DiscountPercentageOnceForeverDurationEndsAtMember1 = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DiscountPercentageOnceForeverDurationEndsAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DiscountPercentageOnceForeverDurationEndsAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_ends_atMember1>(null, DiscountPercentageOnceForeverDurationEndsAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1"/>, <see cref="int"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DiscountPercentageOnceForeverDuration_max_redemptions : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1? DiscountPercentageOnceForeverDurationMaxRedemptionsMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1 DiscountPercentageOnceForeverDurationMaxRedemptionsMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_max_redemptions();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else {
                    result.DiscountPercentageOnceForeverDurationMaxRedemptionsMember1 = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DiscountPercentageOnceForeverDurationMaxRedemptionsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DiscountPercentageOnceForeverDurationMaxRedemptionsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_max_redemptionsMember1>(null, DiscountPercentageOnceForeverDurationMaxRedemptionsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DiscountPercentageOnceForeverDuration_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1? DiscountPercentageOnceForeverDurationModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1 DiscountPercentageOnceForeverDurationModifiedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.DiscountPercentageOnceForeverDurationModifiedAtMember1 = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DiscountPercentageOnceForeverDurationModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DiscountPercentageOnceForeverDurationModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_modified_atMember1>(null, DiscountPercentageOnceForeverDurationModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DiscountPercentageOnceForeverDuration_starts_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1? DiscountPercentageOnceForeverDurationStartsAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1 DiscountPercentageOnceForeverDurationStartsAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration.DiscountPercentageOnceForeverDuration_starts_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.DiscountPercentageOnceForeverDurationStartsAtMember1 = new global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DiscountPercentageOnceForeverDurationStartsAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DiscountPercentageOnceForeverDurationStartsAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.DiscountPercentageOnceForeverDuration_starts_atMember1>(null, DiscountPercentageOnceForeverDurationStartsAtMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
