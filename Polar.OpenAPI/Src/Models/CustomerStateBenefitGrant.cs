// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// An active benefit grant for a customer.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CustomerStateBenefitGrant : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The ID of the benefit concerned by this grant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BenefitId { get; set; }
#nullable restore
#else
        public string BenefitId { get; set; }
#endif
        /// <summary>The type of the benefit concerned by this grant.</summary>
        public global::Polar.OpenAPI.Models.BenefitType? BenefitType { get; set; }
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The timestamp when the benefit was granted.</summary>
        public DateTimeOffset? GrantedAt { get; set; }
        /// <summary>The ID of the grant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>The properties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties? Properties { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties Properties { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant"/> and sets the default values.
        /// </summary>
        public CustomerStateBenefitGrant()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CustomerStateBenefitGrant CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.CustomerStateBenefitGrant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "benefit_id", n => { BenefitId = n.GetStringValue(); } },
                { "benefit_type", n => { BenefitType = n.GetEnumValue<global::Polar.OpenAPI.Models.BenefitType>(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "granted_at", n => { GrantedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at>(global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at.CreateFromDiscriminatorValue); } },
                { "properties", n => { Properties = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties>(global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("benefit_id", BenefitId);
            writer.WriteEnumValue<global::Polar.OpenAPI.Models.BenefitType>("benefit_type", BenefitType);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDateTimeOffsetValue("granted_at", GrantedAt);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at>("modified_at", ModifiedAt);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties>("properties", Properties);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerStateBenefitGrant_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1? CustomerStateBenefitGrantModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1 CustomerStateBenefitGrantModifiedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerStateBenefitGrantModifiedAtMember1 = new global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateBenefitGrantModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateBenefitGrantModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant_modified_atMember1>(null, CustomerStateBenefitGrantModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.BenefitGrantCustomProperties"/>, <see cref="global::Polar.OpenAPI.Models.BenefitGrantDiscordProperties"/>, <see cref="global::Polar.OpenAPI.Models.BenefitGrantDownloadablesProperties"/>, <see cref="global::Polar.OpenAPI.Models.BenefitGrantGitHubRepositoryProperties"/>, <see cref="global::Polar.OpenAPI.Models.BenefitGrantLicenseKeysProperties"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerStateBenefitGrant_properties : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.BenefitGrantCustomProperties"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.BenefitGrantCustomProperties? BenefitGrantCustomProperties { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.BenefitGrantCustomProperties BenefitGrantCustomProperties { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.BenefitGrantDiscordProperties"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.BenefitGrantDiscordProperties? BenefitGrantDiscordProperties { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.BenefitGrantDiscordProperties BenefitGrantDiscordProperties { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.BenefitGrantDownloadablesProperties"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.BenefitGrantDownloadablesProperties? BenefitGrantDownloadablesProperties { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.BenefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.BenefitGrantGitHubRepositoryProperties"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.BenefitGrantGitHubRepositoryProperties? BenefitGrantGitHubRepositoryProperties { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.BenefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.BenefitGrantLicenseKeysProperties"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.BenefitGrantLicenseKeysProperties? BenefitGrantLicenseKeysProperties { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.BenefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CustomerStateBenefitGrant_properties();
                result.BenefitGrantCustomProperties = new global::Polar.OpenAPI.Models.BenefitGrantCustomProperties();
                result.BenefitGrantDiscordProperties = new global::Polar.OpenAPI.Models.BenefitGrantDiscordProperties();
                result.BenefitGrantDownloadablesProperties = new global::Polar.OpenAPI.Models.BenefitGrantDownloadablesProperties();
                result.BenefitGrantGitHubRepositoryProperties = new global::Polar.OpenAPI.Models.BenefitGrantGitHubRepositoryProperties();
                result.BenefitGrantLicenseKeysProperties = new global::Polar.OpenAPI.Models.BenefitGrantLicenseKeysProperties();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(BenefitGrantCustomProperties != null || BenefitGrantDiscordProperties != null || BenefitGrantDownloadablesProperties != null || BenefitGrantGitHubRepositoryProperties != null || BenefitGrantLicenseKeysProperties != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(BenefitGrantCustomProperties, BenefitGrantDiscordProperties, BenefitGrantDownloadablesProperties, BenefitGrantGitHubRepositoryProperties, BenefitGrantLicenseKeysProperties);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.BenefitGrantCustomProperties>(null, BenefitGrantCustomProperties, BenefitGrantDiscordProperties, BenefitGrantDownloadablesProperties, BenefitGrantGitHubRepositoryProperties, BenefitGrantLicenseKeysProperties);
            }
        }
    }
}
#pragma warning restore CS0618
