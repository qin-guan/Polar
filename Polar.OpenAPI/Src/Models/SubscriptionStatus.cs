// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>The status of the subscription.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum SubscriptionStatus
    {
        [EnumMember(Value = "incomplete")]
        #pragma warning disable CS1591
        Incomplete,
        #pragma warning restore CS1591
        [EnumMember(Value = "incomplete_expired")]
        #pragma warning disable CS1591
        Incomplete_expired,
        #pragma warning restore CS1591
        [EnumMember(Value = "trialing")]
        #pragma warning disable CS1591
        Trialing,
        #pragma warning restore CS1591
        [EnumMember(Value = "active")]
        #pragma warning disable CS1591
        Active,
        #pragma warning restore CS1591
        [EnumMember(Value = "past_due")]
        #pragma warning disable CS1591
        Past_due,
        #pragma warning restore CS1591
        [EnumMember(Value = "canceled")]
        #pragma warning disable CS1591
        Canceled,
        #pragma warning restore CS1591
        [EnumMember(Value = "unpaid")]
        #pragma warning disable CS1591
        Unpaid,
        #pragma warning restore CS1591
    }
}
