// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// Update an existing checkout session using the client secret.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CheckoutUpdatePublic : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount? Amount { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount Amount { get; set; }
#endif
        /// <summary>The customer_billing_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Address? CustomerBillingAddress { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Address CustomerBillingAddress { get; set; }
#endif
        /// <summary>The customer_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email? CustomerEmail { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email CustomerEmail { get; set; }
#endif
        /// <summary>The customer_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name? CustomerName { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name CustomerName { get; set; }
#endif
        /// <summary>The customer_tax_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id? CustomerTaxId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id CustomerTaxId { get; set; }
#endif
        /// <summary>Key-value object storing custom field values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_custom_field_data? CustomFieldData { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_custom_field_data CustomFieldData { get; set; }
#endif
        /// <summary>Discount code to apply to the checkout.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code? DiscountCode { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code DiscountCode { get; set; }
#endif
        /// <summary>ID of the product to checkout. Must be present in the checkout&apos;s product list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id? ProductId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id ProductId { get; set; }
#endif
        /// <summary>ID of the product price to checkout. Must correspond to a price present in the checkout&apos;s product list.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id? ProductPriceId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id ProductPriceId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic"/> and sets the default values.
        /// </summary>
        public CheckoutUpdatePublic()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.CheckoutUpdatePublic();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount.CreateFromDiscriminatorValue); } },
                { "custom_field_data", n => { CustomFieldData = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_custom_field_data>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic_custom_field_data.CreateFromDiscriminatorValue); } },
                { "customer_billing_address", n => { CustomerBillingAddress = n.GetObjectValue<global::Polar.OpenAPI.Models.Address>(global::Polar.OpenAPI.Models.Address.CreateFromDiscriminatorValue); } },
                { "customer_email", n => { CustomerEmail = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email.CreateFromDiscriminatorValue); } },
                { "customer_name", n => { CustomerName = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name.CreateFromDiscriminatorValue); } },
                { "customer_tax_id", n => { CustomerTaxId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id.CreateFromDiscriminatorValue); } },
                { "discount_code", n => { DiscountCode = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code.CreateFromDiscriminatorValue); } },
                { "product_id", n => { ProductId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id.CreateFromDiscriminatorValue); } },
                { "product_price_id", n => { ProductPriceId = n.GetObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id>(global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount>("amount", Amount);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Address>("customer_billing_address", CustomerBillingAddress);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email>("customer_email", CustomerEmail);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name>("customer_name", CustomerName);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id>("customer_tax_id", CustomerTaxId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_custom_field_data>("custom_field_data", CustomFieldData);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code>("discount_code", DiscountCode);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id>("product_id", ProductId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id>("product_price_id", ProductPriceId);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1"/>, <see cref="int"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_amount : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1? CheckoutUpdatePublicAmountMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1 CheckoutUpdatePublicAmountMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_amount();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else {
                    result.CheckoutUpdatePublicAmountMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicAmountMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicAmountMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_amountMember1>(null, CheckoutUpdatePublicAmountMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_customer_email : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1? CheckoutUpdatePublicCustomerEmailMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1 CheckoutUpdatePublicCustomerEmailMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_email();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicCustomerEmailMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicCustomerEmailMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicCustomerEmailMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_emailMember1>(null, CheckoutUpdatePublicCustomerEmailMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_customer_name : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1? CheckoutUpdatePublicCustomerNameMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1 CheckoutUpdatePublicCustomerNameMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_name();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicCustomerNameMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicCustomerNameMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicCustomerNameMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_nameMember1>(null, CheckoutUpdatePublicCustomerNameMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_customer_tax_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1? CheckoutUpdatePublicCustomerTaxIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1 CheckoutUpdatePublicCustomerTaxIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_customer_tax_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicCustomerTaxIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicCustomerTaxIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicCustomerTaxIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_customer_tax_idMember1>(null, CheckoutUpdatePublicCustomerTaxIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_discount_code : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1? CheckoutUpdatePublicDiscountCodeMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1 CheckoutUpdatePublicDiscountCodeMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_discount_code();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicDiscountCodeMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicDiscountCodeMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicDiscountCodeMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_discount_codeMember1>(null, CheckoutUpdatePublicDiscountCodeMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_product_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1? CheckoutUpdatePublicProductIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1 CheckoutUpdatePublicProductIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicProductIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicProductIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicProductIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_idMember1>(null, CheckoutUpdatePublicProductIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CheckoutUpdatePublic_product_price_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1? CheckoutUpdatePublicProductPriceIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1 CheckoutUpdatePublicProductPriceIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic.CheckoutUpdatePublic_product_price_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CheckoutUpdatePublicProductPriceIdMember1 = new global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutUpdatePublicProductPriceIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CheckoutUpdatePublicProductPriceIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CheckoutUpdatePublic_product_price_idMember1>(null, CheckoutUpdatePublicProductPriceIdMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
