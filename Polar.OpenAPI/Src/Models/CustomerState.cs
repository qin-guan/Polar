// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Polar.OpenAPI.Models
{
    /// <summary>
    /// A customer along with additional state information:* Active subscriptions* Active benefits
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CustomerState : IAdditionalDataHolder, IParsable
    {
        /// <summary>The customer&apos;s active subscriptions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.CustomerStateSubscription>? ActiveSubscriptions { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.CustomerStateSubscription> ActiveSubscriptions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The avatar_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AvatarUrl { get; private set; }
#nullable restore
#else
        public string AvatarUrl { get; private set; }
#endif
        /// <summary>The billing_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.Address? BillingAddress { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.Address BillingAddress { get; set; }
#endif
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Timestamp for when the customer was soft deleted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at? DeletedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at DeletedAt { get; set; }
#endif
        /// <summary>The email address of the customer. This must be unique within the organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.</summary>
        public bool? EmailVerified { get; set; }
        /// <summary>The ID of the customer in your system. This must be unique within the organization. Once set, it can&apos;t be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id? ExternalId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id ExternalId { get; set; }
#endif
        /// <summary>The customer&apos;s active benefit grants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant>? GrantedBenefits { get; set; }
#nullable restore
#else
        public List<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant> GrantedBenefits { get; set; }
#endif
        /// <summary>The ID of the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState_metadata Metadata { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>The name of the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_name? Name { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_name Name { get; set; }
#endif
        /// <summary>The ID of the organization owning the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationId { get; set; }
#nullable restore
#else
        public string OrganizationId { get; set; }
#endif
        /// <summary>The tax_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id? TaxId { get; set; }
#nullable restore
#else
        public global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id TaxId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Polar.OpenAPI.Models.CustomerState"/> and sets the default values.
        /// </summary>
        public CustomerState()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Polar.OpenAPI.Models.CustomerState CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Polar.OpenAPI.Models.CustomerState();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_subscriptions", n => { ActiveSubscriptions = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.CustomerStateSubscription>(global::Polar.OpenAPI.Models.CustomerStateSubscription.CreateFromDiscriminatorValue)?.AsList(); } },
                { "avatar_url", n => { AvatarUrl = n.GetStringValue(); } },
                { "billing_address", n => { BillingAddress = n.GetObjectValue<global::Polar.OpenAPI.Models.Address>(global::Polar.OpenAPI.Models.Address.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "deleted_at", n => { DeletedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at>(global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "email_verified", n => { EmailVerified = n.GetBoolValue(); } },
                { "external_id", n => { ExternalId = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id>(global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id.CreateFromDiscriminatorValue); } },
                { "granted_benefits", n => { GrantedBenefits = n.GetCollectionOfObjectValues<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant>(global::Polar.OpenAPI.Models.CustomerStateBenefitGrant.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState_metadata>(global::Polar.OpenAPI.Models.CustomerState_metadata.CreateFromDiscriminatorValue); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at>(global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_name>(global::Polar.OpenAPI.Models.CustomerState.CustomerState_name.CreateFromDiscriminatorValue); } },
                { "organization_id", n => { OrganizationId = n.GetStringValue(); } },
                { "tax_id", n => { TaxId = n.GetObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id>(global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.CustomerStateSubscription>("active_subscriptions", ActiveSubscriptions);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.Address>("billing_address", BillingAddress);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at>("deleted_at", DeletedAt);
            writer.WriteStringValue("email", Email);
            writer.WriteBoolValue("email_verified", EmailVerified);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id>("external_id", ExternalId);
            writer.WriteCollectionOfObjectValues<global::Polar.OpenAPI.Models.CustomerStateBenefitGrant>("granted_benefits", GrantedBenefits);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at>("modified_at", ModifiedAt);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_name>("name", Name);
            writer.WriteStringValue("organization_id", OrganizationId);
            writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id>("tax_id", TaxId);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerState_deleted_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1? CustomerStateDeletedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1 CustomerStateDeletedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerState.CustomerState_deleted_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerStateDeletedAtMember1 = new global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateDeletedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateDeletedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_deleted_atMember1>(null, CustomerStateDeletedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CustomerState_external_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerState_external_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_external_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_external_idMember1? CustomerStateExternalIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_external_idMember1 CustomerStateExternalIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerState.CustomerState_external_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerStateExternalIdMember1 = new global::Polar.OpenAPI.Models.CustomerState_external_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateExternalIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateExternalIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_external_idMember1>(null, CustomerStateExternalIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::Polar.OpenAPI.Models.CustomerState_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerState_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_modified_atMember1? CustomerStateModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_modified_atMember1 CustomerStateModifiedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerState.CustomerState_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerStateModifiedAtMember1 = new global::Polar.OpenAPI.Models.CustomerState_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_modified_atMember1>(null, CustomerStateModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CustomerState_nameMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerState_name : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_nameMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_nameMember1? CustomerStateNameMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_nameMember1 CustomerStateNameMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState.CustomerState_name"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerState.CustomerState_name CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerState.CustomerState_name();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerStateNameMember1 = new global::Polar.OpenAPI.Models.CustomerState_nameMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateNameMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateNameMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_nameMember1>(null, CustomerStateNameMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Polar.OpenAPI.Models.CustomerState_tax_idMember1"/>, <see cref="global::Polar.OpenAPI.Models.CustomerState_tax_idMember2"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerState_tax_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_tax_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_tax_idMember1? CustomerStateTaxIdMember1 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_tax_idMember1 CustomerStateTaxIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Polar.OpenAPI.Models.CustomerState_tax_idMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Polar.OpenAPI.Models.CustomerState_tax_idMember2? CustomerStateTaxIdMember2 { get; set; }
#nullable restore
#else
            public global::Polar.OpenAPI.Models.CustomerState_tax_idMember2 CustomerStateTaxIdMember2 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Polar.OpenAPI.Models.CustomerState.CustomerState_tax_id();
                result.CustomerStateTaxIdMember1 = new global::Polar.OpenAPI.Models.CustomerState_tax_idMember1();
                result.CustomerStateTaxIdMember2 = new global::Polar.OpenAPI.Models.CustomerState_tax_idMember2();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerStateTaxIdMember1 != null || CustomerStateTaxIdMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerStateTaxIdMember1, CustomerStateTaxIdMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Polar.OpenAPI.Models.CustomerState_tax_idMember1>(null, CustomerStateTaxIdMember1, CustomerStateTaxIdMember2);
            }
        }
    }
}
#pragma warning restore CS0618
