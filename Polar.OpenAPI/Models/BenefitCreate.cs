// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.BenefitCustomCreate"/>, <see cref="global::ApiSdk.Models.BenefitDiscordCreate"/>, <see cref="global::ApiSdk.Models.BenefitDownloadablesCreate"/>, <see cref="global::ApiSdk.Models.BenefitGitHubRepositoryCreate"/>, <see cref="global::ApiSdk.Models.BenefitLicenseKeysCreate"/>, <see cref="global::ApiSdk.Models.BenefitMeterCreditCreate"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BenefitCreate : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitCustomCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitCustomCreate? BenefitCustomCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitCustomCreate BenefitCustomCreate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitDiscordCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitDiscordCreate? BenefitDiscordCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitDiscordCreate BenefitDiscordCreate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitDownloadablesCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitDownloadablesCreate? BenefitDownloadablesCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitDownloadablesCreate BenefitDownloadablesCreate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitGitHubRepositoryCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitGitHubRepositoryCreate? BenefitGitHubRepositoryCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitGitHubRepositoryCreate BenefitGitHubRepositoryCreate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitLicenseKeysCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitLicenseKeysCreate? BenefitLicenseKeysCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitLicenseKeysCreate BenefitLicenseKeysCreate { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.BenefitMeterCreditCreate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BenefitMeterCreditCreate? BenefitMeterCreditCreate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BenefitMeterCreditCreate BenefitMeterCreditCreate { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.BenefitCreate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.BenefitCreate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::ApiSdk.Models.BenefitCreate();
            if("custom".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitCustomCreate = new global::ApiSdk.Models.BenefitCustomCreate();
            }
            else if("discord".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitDiscordCreate = new global::ApiSdk.Models.BenefitDiscordCreate();
            }
            else if("downloadables".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitDownloadablesCreate = new global::ApiSdk.Models.BenefitDownloadablesCreate();
            }
            else if("github_repository".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitGitHubRepositoryCreate = new global::ApiSdk.Models.BenefitGitHubRepositoryCreate();
            }
            else if("license_keys".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitLicenseKeysCreate = new global::ApiSdk.Models.BenefitLicenseKeysCreate();
            }
            else if("meter_credit".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.BenefitMeterCreditCreate = new global::ApiSdk.Models.BenefitMeterCreditCreate();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(BenefitCustomCreate != null)
            {
                return BenefitCustomCreate.GetFieldDeserializers();
            }
            else if(BenefitDiscordCreate != null)
            {
                return BenefitDiscordCreate.GetFieldDeserializers();
            }
            else if(BenefitDownloadablesCreate != null)
            {
                return BenefitDownloadablesCreate.GetFieldDeserializers();
            }
            else if(BenefitGitHubRepositoryCreate != null)
            {
                return BenefitGitHubRepositoryCreate.GetFieldDeserializers();
            }
            else if(BenefitLicenseKeysCreate != null)
            {
                return BenefitLicenseKeysCreate.GetFieldDeserializers();
            }
            else if(BenefitMeterCreditCreate != null)
            {
                return BenefitMeterCreditCreate.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(BenefitCustomCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitCustomCreate>(null, BenefitCustomCreate);
            }
            else if(BenefitDiscordCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitDiscordCreate>(null, BenefitDiscordCreate);
            }
            else if(BenefitDownloadablesCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitDownloadablesCreate>(null, BenefitDownloadablesCreate);
            }
            else if(BenefitGitHubRepositoryCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitGitHubRepositoryCreate>(null, BenefitGitHubRepositoryCreate);
            }
            else if(BenefitLicenseKeysCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitLicenseKeysCreate>(null, BenefitLicenseKeysCreate);
            }
            else if(BenefitMeterCreditCreate != null)
            {
                writer.WriteObjectValue<global::ApiSdk.Models.BenefitMeterCreditCreate>(null, BenefitMeterCreditCreate);
            }
        }
    }
}
#pragma warning restore CS0618
