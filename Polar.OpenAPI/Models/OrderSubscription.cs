// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OrderSubscription : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount of the subscription.</summary>
        public int? Amount { get; set; }
        /// <summary>Whether the subscription will be canceled at the end of the current period.</summary>
        public bool? CancelAtPeriodEnd { get; set; }
        /// <summary>The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at? CanceledAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at CanceledAt { get; set; }
#endif
        /// <summary>The checkout_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id? CheckoutId { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id CheckoutId { get; set; }
#endif
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The currency of the subscription.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The end timestamp of the current billing period.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end? CurrentPeriodEnd { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end CurrentPeriodEnd { get; set; }
#endif
        /// <summary>The start timestamp of the current billing period.</summary>
        public DateTimeOffset? CurrentPeriodStart { get; set; }
        /// <summary>The customer_cancellation_comment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment? CustomerCancellationComment { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment CustomerCancellationComment { get; set; }
#endif
        /// <summary>The customer_cancellation_reason property</summary>
        public global::ApiSdk.Models.CustomerCancellationReason? CustomerCancellationReason { get; set; }
        /// <summary>The ID of the subscribed customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The ID of the applied discount, if any.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id? DiscountId { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id DiscountId { get; set; }
#endif
        /// <summary>The timestamp when the subscription ended.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at? EndedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at EndedAt { get; set; }
#endif
        /// <summary>The timestamp when the subscription will end.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at? EndsAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at EndsAt { get; set; }
#endif
        /// <summary>The ID of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription_metadata Metadata { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>The price_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PriceId { get; set; }
#nullable restore
#else
        public string PriceId { get; set; }
#endif
        /// <summary>The ID of the subscribed product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductId { get; set; }
#nullable restore
#else
        public string ProductId { get; set; }
#endif
        /// <summary>The interval at which the subscription recurs.</summary>
        public global::ApiSdk.Models.SubscriptionRecurringInterval? RecurringInterval { get; set; }
        /// <summary>The timestamp when the subscription started.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at? StartedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at StartedAt { get; set; }
#endif
        /// <summary>The status of the subscription.</summary>
        public global::ApiSdk.Models.SubscriptionStatus? Status { get; set; }
        /// <summary>The user_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.OrderSubscription"/> and sets the default values.
        /// </summary>
        public OrderSubscription()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.OrderSubscription CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.OrderSubscription();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "cancel_at_period_end", n => { CancelAtPeriodEnd = n.GetBoolValue(); } },
                { "canceled_at", n => { CanceledAt = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at.CreateFromDiscriminatorValue); } },
                { "checkout_id", n => { CheckoutId = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "current_period_end", n => { CurrentPeriodEnd = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end.CreateFromDiscriminatorValue); } },
                { "current_period_start", n => { CurrentPeriodStart = n.GetDateTimeOffsetValue(); } },
                { "customer_cancellation_comment", n => { CustomerCancellationComment = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment.CreateFromDiscriminatorValue); } },
                { "customer_cancellation_reason", n => { CustomerCancellationReason = n.GetEnumValue<global::ApiSdk.Models.CustomerCancellationReason>(); } },
                { "customer_id", n => { CustomerId = n.GetStringValue(); } },
                { "discount_id", n => { DiscountId = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id.CreateFromDiscriminatorValue); } },
                { "ended_at", n => { EndedAt = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at.CreateFromDiscriminatorValue); } },
                { "ends_at", n => { EndsAt = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription_metadata>(global::ApiSdk.Models.OrderSubscription_metadata.CreateFromDiscriminatorValue); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at.CreateFromDiscriminatorValue); } },
                { "price_id", n => { PriceId = n.GetStringValue(); } },
                { "product_id", n => { ProductId = n.GetStringValue(); } },
                { "recurring_interval", n => { RecurringInterval = n.GetEnumValue<global::ApiSdk.Models.SubscriptionRecurringInterval>(); } },
                { "started_at", n => { StartedAt = n.GetObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at>(global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.SubscriptionStatus>(); } },
                { "user_id", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteBoolValue("cancel_at_period_end", CancelAtPeriodEnd);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at>("canceled_at", CanceledAt);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id>("checkout_id", CheckoutId);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end>("current_period_end", CurrentPeriodEnd);
            writer.WriteDateTimeOffsetValue("current_period_start", CurrentPeriodStart);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment>("customer_cancellation_comment", CustomerCancellationComment);
            writer.WriteEnumValue<global::ApiSdk.Models.CustomerCancellationReason>("customer_cancellation_reason", CustomerCancellationReason);
            writer.WriteStringValue("customer_id", CustomerId);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id>("discount_id", DiscountId);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at>("ended_at", EndedAt);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at>("ends_at", EndsAt);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at>("modified_at", ModifiedAt);
            writer.WriteStringValue("price_id", PriceId);
            writer.WriteStringValue("product_id", ProductId);
            writer.WriteEnumValue<global::ApiSdk.Models.SubscriptionRecurringInterval>("recurring_interval", RecurringInterval);
            writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at>("started_at", StartedAt);
            writer.WriteEnumValue<global::ApiSdk.Models.SubscriptionStatus>("status", Status);
            writer.WriteStringValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_canceled_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_canceled_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_canceled_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_canceled_atMember1? OrderSubscriptionCanceledAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_canceled_atMember1 OrderSubscriptionCanceledAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_canceled_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionCanceledAtMember1 = new global::ApiSdk.Models.OrderSubscription_canceled_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionCanceledAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionCanceledAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_canceled_atMember1>(null, OrderSubscriptionCanceledAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.OrderSubscription_checkout_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_checkout_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_checkout_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_checkout_idMember1? OrderSubscriptionCheckoutIdMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_checkout_idMember1 OrderSubscriptionCheckoutIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_checkout_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrderSubscriptionCheckoutIdMember1 = new global::ApiSdk.Models.OrderSubscription_checkout_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionCheckoutIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionCheckoutIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_checkout_idMember1>(null, OrderSubscriptionCheckoutIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_current_period_endMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_current_period_end : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_current_period_endMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_current_period_endMember1? OrderSubscriptionCurrentPeriodEndMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_current_period_endMember1 OrderSubscriptionCurrentPeriodEndMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_current_period_end();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionCurrentPeriodEndMember1 = new global::ApiSdk.Models.OrderSubscription_current_period_endMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionCurrentPeriodEndMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionCurrentPeriodEndMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_current_period_endMember1>(null, OrderSubscriptionCurrentPeriodEndMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_customer_cancellation_comment : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1? OrderSubscriptionCustomerCancellationCommentMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1 OrderSubscriptionCustomerCancellationCommentMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_customer_cancellation_comment();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrderSubscriptionCustomerCancellationCommentMember1 = new global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionCustomerCancellationCommentMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionCustomerCancellationCommentMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_customer_cancellation_commentMember1>(null, OrderSubscriptionCustomerCancellationCommentMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.OrderSubscription_discount_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_discount_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_discount_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_discount_idMember1? OrderSubscriptionDiscountIdMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_discount_idMember1 OrderSubscriptionDiscountIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_discount_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.OrderSubscriptionDiscountIdMember1 = new global::ApiSdk.Models.OrderSubscription_discount_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionDiscountIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionDiscountIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_discount_idMember1>(null, OrderSubscriptionDiscountIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_ended_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_ended_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_ended_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_ended_atMember1? OrderSubscriptionEndedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_ended_atMember1 OrderSubscriptionEndedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_ended_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionEndedAtMember1 = new global::ApiSdk.Models.OrderSubscription_ended_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionEndedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionEndedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_ended_atMember1>(null, OrderSubscriptionEndedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_ends_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_ends_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_ends_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_ends_atMember1? OrderSubscriptionEndsAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_ends_atMember1 OrderSubscriptionEndsAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_ends_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionEndsAtMember1 = new global::ApiSdk.Models.OrderSubscription_ends_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionEndsAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionEndsAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_ends_atMember1>(null, OrderSubscriptionEndsAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_modified_atMember1? OrderSubscriptionModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_modified_atMember1 OrderSubscriptionModifiedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionModifiedAtMember1 = new global::ApiSdk.Models.OrderSubscription_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_modified_atMember1>(null, OrderSubscriptionModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.OrderSubscription_started_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OrderSubscription_started_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.OrderSubscription_started_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.OrderSubscription_started_atMember1? OrderSubscriptionStartedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.OrderSubscription_started_atMember1 OrderSubscriptionStartedAtMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.OrderSubscription.OrderSubscription_started_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.OrderSubscriptionStartedAtMember1 = new global::ApiSdk.Models.OrderSubscription_started_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(OrderSubscriptionStartedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(OrderSubscriptionStartedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.OrderSubscription_started_atMember1>(null, OrderSubscriptionStartedAtMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
