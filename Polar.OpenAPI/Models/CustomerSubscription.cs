// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomerSubscription : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount of the subscription.</summary>
        public int? Amount { get; set; }
        /// <summary>Whether the subscription will be canceled at the end of the current period.</summary>
        public bool? CancelAtPeriodEnd { get; set; }
        /// <summary>The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at? CanceledAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at CanceledAt { get; set; }
#endif
        /// <summary>The checkout_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id? CheckoutId { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id CheckoutId { get; set; }
#endif
        /// <summary>Creation timestamp of the object.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The currency of the subscription.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The end timestamp of the current billing period.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end? CurrentPeriodEnd { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end CurrentPeriodEnd { get; set; }
#endif
        /// <summary>The start timestamp of the current billing period.</summary>
        public DateTimeOffset? CurrentPeriodStart { get; set; }
        /// <summary>The customer_cancellation_comment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment? CustomerCancellationComment { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment CustomerCancellationComment { get; set; }
#endif
        /// <summary>The customer_cancellation_reason property</summary>
        public global::ApiSdk.Models.CustomerCancellationReason? CustomerCancellationReason { get; set; }
        /// <summary>The ID of the subscribed customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The ID of the applied discount, if any.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id? DiscountId { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id DiscountId { get; set; }
#endif
        /// <summary>The timestamp when the subscription ended.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at? EndedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at EndedAt { get; set; }
#endif
        /// <summary>The timestamp when the subscription will end.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at? EndsAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at EndsAt { get; set; }
#endif
        /// <summary>The ID of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Last modification timestamp of the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at? ModifiedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at ModifiedAt { get; set; }
#endif
        /// <summary>The price property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price? Price { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price Price { get; set; }
#endif
        /// <summary>The price_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PriceId { get; set; }
#nullable restore
#else
        public string PriceId { get; set; }
#endif
        /// <summary>List of enabled prices for the subscription.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices>? Prices { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices> Prices { get; set; }
#endif
        /// <summary>The product property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscriptionProduct? Product { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscriptionProduct Product { get; set; }
#endif
        /// <summary>The ID of the subscribed product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductId { get; set; }
#nullable restore
#else
        public string ProductId { get; set; }
#endif
        /// <summary>The interval at which the subscription recurs.</summary>
        public global::ApiSdk.Models.SubscriptionRecurringInterval? RecurringInterval { get; set; }
        /// <summary>The timestamp when the subscription started.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at? StartedAt { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at StartedAt { get; set; }
#endif
        /// <summary>The status of the subscription.</summary>
        public global::ApiSdk.Models.SubscriptionStatus? Status { get; set; }
        /// <summary>The user_id property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.CustomerSubscription"/> and sets the default values.
        /// </summary>
        public CustomerSubscription()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.CustomerSubscription CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.CustomerSubscription();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "cancel_at_period_end", n => { CancelAtPeriodEnd = n.GetBoolValue(); } },
                { "canceled_at", n => { CanceledAt = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at.CreateFromDiscriminatorValue); } },
                { "checkout_id", n => { CheckoutId = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "current_period_end", n => { CurrentPeriodEnd = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end.CreateFromDiscriminatorValue); } },
                { "current_period_start", n => { CurrentPeriodStart = n.GetDateTimeOffsetValue(); } },
                { "customer_cancellation_comment", n => { CustomerCancellationComment = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment.CreateFromDiscriminatorValue); } },
                { "customer_cancellation_reason", n => { CustomerCancellationReason = n.GetEnumValue<global::ApiSdk.Models.CustomerCancellationReason>(); } },
                { "customer_id", n => { CustomerId = n.GetStringValue(); } },
                { "discount_id", n => { DiscountId = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id.CreateFromDiscriminatorValue); } },
                { "ended_at", n => { EndedAt = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at.CreateFromDiscriminatorValue); } },
                { "ends_at", n => { EndsAt = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "modified_at", n => { ModifiedAt = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at.CreateFromDiscriminatorValue); } },
                { "price", n => { Price = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price.CreateFromDiscriminatorValue); } },
                { "price_id", n => { PriceId = n.GetStringValue(); } },
                { "prices", n => { Prices = n.GetCollectionOfObjectValues<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices.CreateFromDiscriminatorValue)?.AsList(); } },
                { "product", n => { Product = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscriptionProduct>(global::ApiSdk.Models.CustomerSubscriptionProduct.CreateFromDiscriminatorValue); } },
                { "product_id", n => { ProductId = n.GetStringValue(); } },
                { "recurring_interval", n => { RecurringInterval = n.GetEnumValue<global::ApiSdk.Models.SubscriptionRecurringInterval>(); } },
                { "started_at", n => { StartedAt = n.GetObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at>(global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.SubscriptionStatus>(); } },
                { "user_id", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteBoolValue("cancel_at_period_end", CancelAtPeriodEnd);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at>("canceled_at", CanceledAt);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id>("checkout_id", CheckoutId);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end>("current_period_end", CurrentPeriodEnd);
            writer.WriteDateTimeOffsetValue("current_period_start", CurrentPeriodStart);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment>("customer_cancellation_comment", CustomerCancellationComment);
            writer.WriteEnumValue<global::ApiSdk.Models.CustomerCancellationReason>("customer_cancellation_reason", CustomerCancellationReason);
            writer.WriteStringValue("customer_id", CustomerId);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id>("discount_id", DiscountId);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at>("ended_at", EndedAt);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at>("ends_at", EndsAt);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at>("modified_at", ModifiedAt);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price>("price", Price);
            writer.WriteStringValue("price_id", PriceId);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices>("prices", Prices);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscriptionProduct>("product", Product);
            writer.WriteStringValue("product_id", ProductId);
            writer.WriteEnumValue<global::ApiSdk.Models.SubscriptionRecurringInterval>("recurring_interval", RecurringInterval);
            writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at>("started_at", StartedAt);
            writer.WriteEnumValue<global::ApiSdk.Models.SubscriptionStatus>("status", Status);
            writer.WriteStringValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_canceled_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_canceled_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_canceled_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_canceled_atMember1? CustomerSubscriptionCanceledAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_canceled_atMember1 CustomerSubscriptionCanceledAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_canceled_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionCanceledAtMember1 = new global::ApiSdk.Models.CustomerSubscription_canceled_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionCanceledAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionCanceledAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_canceled_atMember1>(null, CustomerSubscriptionCanceledAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.CustomerSubscription_checkout_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_checkout_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_checkout_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_checkout_idMember1? CustomerSubscriptionCheckoutIdMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_checkout_idMember1 CustomerSubscriptionCheckoutIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_checkout_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerSubscriptionCheckoutIdMember1 = new global::ApiSdk.Models.CustomerSubscription_checkout_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionCheckoutIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionCheckoutIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_checkout_idMember1>(null, CustomerSubscriptionCheckoutIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_current_period_endMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_current_period_end : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_current_period_endMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_current_period_endMember1? CustomerSubscriptionCurrentPeriodEndMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_current_period_endMember1 CustomerSubscriptionCurrentPeriodEndMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_current_period_end();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionCurrentPeriodEndMember1 = new global::ApiSdk.Models.CustomerSubscription_current_period_endMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionCurrentPeriodEndMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionCurrentPeriodEndMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_current_period_endMember1>(null, CustomerSubscriptionCurrentPeriodEndMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_customer_cancellation_comment : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1? CustomerSubscriptionCustomerCancellationCommentMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1 CustomerSubscriptionCustomerCancellationCommentMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_customer_cancellation_comment();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerSubscriptionCustomerCancellationCommentMember1 = new global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionCustomerCancellationCommentMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionCustomerCancellationCommentMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_customer_cancellation_commentMember1>(null, CustomerSubscriptionCustomerCancellationCommentMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.CustomerSubscription_discount_idMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_discount_id : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_discount_idMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_discount_idMember1? CustomerSubscriptionDiscountIdMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_discount_idMember1 CustomerSubscriptionDiscountIdMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_discount_id();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.CustomerSubscriptionDiscountIdMember1 = new global::ApiSdk.Models.CustomerSubscription_discount_idMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionDiscountIdMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionDiscountIdMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_discount_idMember1>(null, CustomerSubscriptionDiscountIdMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_ended_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_ended_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_ended_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_ended_atMember1? CustomerSubscriptionEndedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_ended_atMember1 CustomerSubscriptionEndedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ended_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionEndedAtMember1 = new global::ApiSdk.Models.CustomerSubscription_ended_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionEndedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionEndedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_ended_atMember1>(null, CustomerSubscriptionEndedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_ends_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_ends_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_ends_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_ends_atMember1? CustomerSubscriptionEndsAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_ends_atMember1 CustomerSubscriptionEndsAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_ends_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionEndsAtMember1 = new global::ApiSdk.Models.CustomerSubscription_ends_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionEndsAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionEndsAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_ends_atMember1>(null, CustomerSubscriptionEndsAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_modified_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_modified_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_modified_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_modified_atMember1? CustomerSubscriptionModifiedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_modified_atMember1 CustomerSubscriptionModifiedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_modified_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionModifiedAtMember1 = new global::ApiSdk.Models.CustomerSubscription_modified_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionModifiedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionModifiedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_modified_atMember1>(null, CustomerSubscriptionModifiedAtMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.LegacyRecurringProductPrice"/>, <see cref="global::ApiSdk.Models.ProductPrice"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_price : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.LegacyRecurringProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.LegacyRecurringProductPrice? LegacyRecurringProductPrice { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.LegacyRecurringProductPrice LegacyRecurringProductPrice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.ProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.ProductPrice? ProductPrice { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.ProductPrice ProductPrice { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("amount_type")?.GetStringValue();
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_price();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LegacyRecurringProductPrice = new global::ApiSdk.Models.LegacyRecurringProductPrice();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProductPrice = new global::ApiSdk.Models.ProductPrice();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(LegacyRecurringProductPrice != null)
                {
                    return LegacyRecurringProductPrice.GetFieldDeserializers();
                }
                else if(ProductPrice != null)
                {
                    return ProductPrice.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(LegacyRecurringProductPrice != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.LegacyRecurringProductPrice>(null, LegacyRecurringProductPrice);
                }
                else if(ProductPrice != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.ProductPrice>(null, ProductPrice);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.LegacyRecurringProductPrice"/>, <see cref="global::ApiSdk.Models.ProductPrice"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_prices : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.LegacyRecurringProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.LegacyRecurringProductPrice? LegacyRecurringProductPrice { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.LegacyRecurringProductPrice LegacyRecurringProductPrice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.ProductPrice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.ProductPrice? ProductPrice { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.ProductPrice ProductPrice { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("amount_type")?.GetStringValue();
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_prices();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LegacyRecurringProductPrice = new global::ApiSdk.Models.LegacyRecurringProductPrice();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProductPrice = new global::ApiSdk.Models.ProductPrice();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(LegacyRecurringProductPrice != null)
                {
                    return LegacyRecurringProductPrice.GetFieldDeserializers();
                }
                else if(ProductPrice != null)
                {
                    return ProductPrice.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(LegacyRecurringProductPrice != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.LegacyRecurringProductPrice>(null, LegacyRecurringProductPrice);
                }
                else if(ProductPrice != null)
                {
                    writer.WriteObjectValue<global::ApiSdk.Models.ProductPrice>(null, ProductPrice);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="DateTimeOffset"/>, <see cref="global::ApiSdk.Models.CustomerSubscription_started_atMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CustomerSubscription_started_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.CustomerSubscription_started_atMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.CustomerSubscription_started_atMember1? CustomerSubscriptionStartedAtMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.CustomerSubscription_started_atMember1 CustomerSubscriptionStartedAtMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="DateTimeOffset"/></summary>
            public DateTimeOffset? DateTimeOffset { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.CustomerSubscription.CustomerSubscription_started_at();
                if(parseNode.GetDateTimeOffsetValue() is DateTimeOffset dateTimeOffsetValue)
                {
                    result.DateTimeOffset = dateTimeOffsetValue;
                }
                else {
                    result.CustomerSubscriptionStartedAtMember1 = new global::ApiSdk.Models.CustomerSubscription_started_atMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomerSubscriptionStartedAtMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CustomerSubscriptionStartedAtMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(DateTimeOffset != null)
                {
                    writer.WriteDateTimeOffsetValue(null, DateTimeOffset);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.CustomerSubscription_started_atMember1>(null, CustomerSubscriptionStartedAtMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
