// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Repository : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Repository.Repository_description? Description { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Repository.Repository_description Description { get; set; }
#endif
        /// <summary>The homepage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Repository.Repository_homepage? Homepage { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Repository.Repository_homepage Homepage { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The internal_organization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Organization? InternalOrganization { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Organization InternalOrganization { get; set; }
#endif
        /// <summary>The is_private property</summary>
        public bool? IsPrivate { get; set; }
        /// <summary>The license property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Repository.Repository_license? License { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Repository.Repository_license License { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The organization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.ExternalOrganization? Organization { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.ExternalOrganization Organization { get; set; }
#endif
        /// <summary>The platform property</summary>
        public global::ApiSdk.Models.Platforms? Platform { get; set; }
        /// <summary>Settings for the repository profile</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.RepositoryProfileSettings? ProfileSettings { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.RepositoryProfileSettings ProfileSettings { get; set; }
#endif
        /// <summary>The stars property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Repository.Repository_stars? Stars { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Repository.Repository_stars Stars { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Repository"/> and sets the default values.
        /// </summary>
        public Repository()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Repository"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.Repository CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Repository();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetObjectValue<global::ApiSdk.Models.Repository.Repository_description>(global::ApiSdk.Models.Repository.Repository_description.CreateFromDiscriminatorValue); } },
                { "homepage", n => { Homepage = n.GetObjectValue<global::ApiSdk.Models.Repository.Repository_homepage>(global::ApiSdk.Models.Repository.Repository_homepage.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "internal_organization", n => { InternalOrganization = n.GetObjectValue<global::ApiSdk.Models.Organization>(global::ApiSdk.Models.Organization.CreateFromDiscriminatorValue); } },
                { "is_private", n => { IsPrivate = n.GetBoolValue(); } },
                { "license", n => { License = n.GetObjectValue<global::ApiSdk.Models.Repository.Repository_license>(global::ApiSdk.Models.Repository.Repository_license.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "organization", n => { Organization = n.GetObjectValue<global::ApiSdk.Models.ExternalOrganization>(global::ApiSdk.Models.ExternalOrganization.CreateFromDiscriminatorValue); } },
                { "platform", n => { Platform = n.GetEnumValue<global::ApiSdk.Models.Platforms>(); } },
                { "profile_settings", n => { ProfileSettings = n.GetObjectValue<global::ApiSdk.Models.RepositoryProfileSettings>(global::ApiSdk.Models.RepositoryProfileSettings.CreateFromDiscriminatorValue); } },
                { "stars", n => { Stars = n.GetObjectValue<global::ApiSdk.Models.Repository.Repository_stars>(global::ApiSdk.Models.Repository.Repository_stars.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ApiSdk.Models.Repository.Repository_description>("description", Description);
            writer.WriteObjectValue<global::ApiSdk.Models.Repository.Repository_homepage>("homepage", Homepage);
            writer.WriteGuidValue("id", Id);
            writer.WriteObjectValue<global::ApiSdk.Models.Organization>("internal_organization", InternalOrganization);
            writer.WriteBoolValue("is_private", IsPrivate);
            writer.WriteObjectValue<global::ApiSdk.Models.Repository.Repository_license>("license", License);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::ApiSdk.Models.ExternalOrganization>("organization", Organization);
            writer.WriteEnumValue<global::ApiSdk.Models.Platforms>("platform", Platform);
            writer.WriteObjectValue<global::ApiSdk.Models.RepositoryProfileSettings>("profile_settings", ProfileSettings);
            writer.WriteObjectValue<global::ApiSdk.Models.Repository.Repository_stars>("stars", Stars);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.Repository_descriptionMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Repository_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.Repository_descriptionMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.Repository_descriptionMember1? RepositoryDescriptionMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.Repository_descriptionMember1 RepositoryDescriptionMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.Repository.Repository_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.Repository.Repository_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.Repository.Repository_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.RepositoryDescriptionMember1 = new global::ApiSdk.Models.Repository_descriptionMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RepositoryDescriptionMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(RepositoryDescriptionMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.Repository_descriptionMember1>(null, RepositoryDescriptionMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.Repository_homepageMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Repository_homepage : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.Repository_homepageMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.Repository_homepageMember1? RepositoryHomepageMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.Repository_homepageMember1 RepositoryHomepageMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.Repository.Repository_homepage"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.Repository.Repository_homepage CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.Repository.Repository_homepage();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.RepositoryHomepageMember1 = new global::ApiSdk.Models.Repository_homepageMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RepositoryHomepageMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(RepositoryHomepageMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.Repository_homepageMember1>(null, RepositoryHomepageMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.Repository_licenseMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Repository_license : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.Repository_licenseMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.Repository_licenseMember1? RepositoryLicenseMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.Repository_licenseMember1 RepositoryLicenseMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.Repository.Repository_license"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.Repository.Repository_license CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.Repository.Repository_license();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.RepositoryLicenseMember1 = new global::ApiSdk.Models.Repository_licenseMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RepositoryLicenseMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(RepositoryLicenseMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.Repository_licenseMember1>(null, RepositoryLicenseMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::ApiSdk.Models.Repository_starsMember1"/>, <see cref="int"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Repository_stars : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="global::ApiSdk.Models.Repository_starsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::ApiSdk.Models.Repository_starsMember1? RepositoryStarsMember1 { get; set; }
#nullable restore
#else
            public global::ApiSdk.Models.Repository_starsMember1 RepositoryStarsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::ApiSdk.Models.Repository.Repository_stars"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::ApiSdk.Models.Repository.Repository_stars CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::ApiSdk.Models.Repository.Repository_stars();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else {
                    result.RepositoryStarsMember1 = new global::ApiSdk.Models.Repository_starsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(RepositoryStarsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(RepositoryStarsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else {
                    writer.WriteObjectValue<global::ApiSdk.Models.Repository_starsMember1>(null, RepositoryStarsMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
